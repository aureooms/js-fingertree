'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.Lazy = Lazy;

var _tree = require('../3-tree');

function Lazy(thunk) {
	this.tree = null;
	this.thunk = thunk;
}

Lazy.prototype = new _tree.Tree();

Lazy.prototype.force = function () {
	if (this.tree === null) {
		this.tree = this.thunk();
		this.thunk = null;
	}
	return this.tree;
};

Lazy.prototype.empty = function () {
	return this.force().empty();
};

Lazy.prototype.measure = function () {
	return this.force().measure();
};

Lazy.prototype.head = function () {
	return this.force().head();
};

Lazy.prototype.last = function () {
	return this.force().last();
};

Lazy.prototype.cons = function (value) {
	return this.force().cons(value);
};

Lazy.prototype.push = function (value) {
	return this.force().push(value);
};

Lazy.prototype.tail = function () {
	return this.force().tail();
};

Lazy.prototype.init = function () {
	return this.force().init();
};

Lazy.prototype.splitTree = function (p, i) {
	return this.force().splitTree(p, i);
};

Lazy.prototype.split = function (p) {
	return this.force().split(p);
};

Lazy.prototype.concat = function (other) {
	return this.force().concat(other);
};

Lazy.prototype[Symbol.iterator] = function () {
	return this.force()[Symbol.iterator]();
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy80LWxhenkvMC1MYXp5LmpzIl0sIm5hbWVzIjpbIkxhenkiLCJ0aHVuayIsInRyZWUiLCJwcm90b3R5cGUiLCJmb3JjZSIsImVtcHR5IiwibWVhc3VyZSIsImhlYWQiLCJsYXN0IiwiY29ucyIsInZhbHVlIiwicHVzaCIsInRhaWwiLCJpbml0Iiwic3BsaXRUcmVlIiwicCIsImkiLCJzcGxpdCIsImNvbmNhdCIsIm90aGVyIiwiU3ltYm9sIiwiaXRlcmF0b3IiXSwibWFwcGluZ3MiOiI7Ozs7O1FBRWdCQSxJLEdBQUFBLEk7O0FBRmhCOztBQUVPLFNBQVNBLElBQVQsQ0FBZ0JDLEtBQWhCLEVBQXdCO0FBQzlCLE1BQUtDLElBQUwsR0FBWSxJQUFaO0FBQ0EsTUFBS0QsS0FBTCxHQUFhQSxLQUFiO0FBQ0E7O0FBRURELEtBQUtHLFNBQUwsR0FBaUIsZ0JBQWpCOztBQUVBSCxLQUFLRyxTQUFMLENBQWVDLEtBQWYsR0FBdUIsWUFBYTtBQUNuQyxLQUFLLEtBQUtGLElBQUwsS0FBYyxJQUFuQixFQUEwQjtBQUN6QixPQUFLQSxJQUFMLEdBQVksS0FBS0QsS0FBTCxFQUFaO0FBQ0EsT0FBS0EsS0FBTCxHQUFhLElBQWI7QUFDQTtBQUNELFFBQU8sS0FBS0MsSUFBWjtBQUNBLENBTkQ7O0FBUUFGLEtBQUtHLFNBQUwsQ0FBZUUsS0FBZixHQUF1QixZQUFhO0FBQ25DLFFBQU8sS0FBS0QsS0FBTCxHQUFjQyxLQUFkLEVBQVA7QUFDQSxDQUZEOztBQUlBTCxLQUFLRyxTQUFMLENBQWVHLE9BQWYsR0FBeUIsWUFBYTtBQUNyQyxRQUFPLEtBQUtGLEtBQUwsR0FBY0UsT0FBZCxFQUFQO0FBQ0EsQ0FGRDs7QUFJQU4sS0FBS0csU0FBTCxDQUFlSSxJQUFmLEdBQXNCLFlBQWE7QUFDbEMsUUFBTyxLQUFLSCxLQUFMLEdBQWNHLElBQWQsRUFBUDtBQUNBLENBRkQ7O0FBSUFQLEtBQUtHLFNBQUwsQ0FBZUssSUFBZixHQUFzQixZQUFhO0FBQ2xDLFFBQU8sS0FBS0osS0FBTCxHQUFjSSxJQUFkLEVBQVA7QUFDQSxDQUZEOztBQUlBUixLQUFLRyxTQUFMLENBQWVNLElBQWYsR0FBc0IsVUFBV0MsS0FBWCxFQUFtQjtBQUN4QyxRQUFPLEtBQUtOLEtBQUwsR0FBY0ssSUFBZCxDQUFvQkMsS0FBcEIsQ0FBUDtBQUNBLENBRkQ7O0FBSUFWLEtBQUtHLFNBQUwsQ0FBZVEsSUFBZixHQUFzQixVQUFXRCxLQUFYLEVBQW1CO0FBQ3hDLFFBQU8sS0FBS04sS0FBTCxHQUFjTyxJQUFkLENBQW9CRCxLQUFwQixDQUFQO0FBQ0EsQ0FGRDs7QUFJQVYsS0FBS0csU0FBTCxDQUFlUyxJQUFmLEdBQXNCLFlBQWE7QUFDbEMsUUFBTyxLQUFLUixLQUFMLEdBQWNRLElBQWQsRUFBUDtBQUNBLENBRkQ7O0FBSUFaLEtBQUtHLFNBQUwsQ0FBZVUsSUFBZixHQUFzQixZQUFhO0FBQ2xDLFFBQU8sS0FBS1QsS0FBTCxHQUFjUyxJQUFkLEVBQVA7QUFDQSxDQUZEOztBQUlBYixLQUFLRyxTQUFMLENBQWVXLFNBQWYsR0FBMkIsVUFBV0MsQ0FBWCxFQUFlQyxDQUFmLEVBQW1CO0FBQzdDLFFBQU8sS0FBS1osS0FBTCxHQUFjVSxTQUFkLENBQXlCQyxDQUF6QixFQUE2QkMsQ0FBN0IsQ0FBUDtBQUNBLENBRkQ7O0FBSUFoQixLQUFLRyxTQUFMLENBQWVjLEtBQWYsR0FBdUIsVUFBV0YsQ0FBWCxFQUFlO0FBQ3JDLFFBQU8sS0FBS1gsS0FBTCxHQUFjYSxLQUFkLENBQXFCRixDQUFyQixDQUFQO0FBQ0EsQ0FGRDs7QUFJQWYsS0FBS0csU0FBTCxDQUFlZSxNQUFmLEdBQXdCLFVBQVdDLEtBQVgsRUFBbUI7QUFDMUMsUUFBTyxLQUFLZixLQUFMLEdBQWNjLE1BQWQsQ0FBc0JDLEtBQXRCLENBQVA7QUFDQSxDQUZEOztBQUlBbkIsS0FBS0csU0FBTCxDQUFlaUIsT0FBT0MsUUFBdEIsSUFBa0MsWUFBYTtBQUM5QyxRQUFPLEtBQUtqQixLQUFMLEdBQWNnQixPQUFPQyxRQUFyQixHQUFQO0FBQ0EsQ0FGRCIsImZpbGUiOiIwLUxhenkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUcmVlIH0gZnJvbSAnLi4vMy10cmVlJyA7XG5cbmV4cG9ydCBmdW5jdGlvbiBMYXp5ICggdGh1bmsgKSB7XG5cdHRoaXMudHJlZSA9IG51bGwgO1xuXHR0aGlzLnRodW5rID0gdGh1bmsgO1xufVxuXG5MYXp5LnByb3RvdHlwZSA9IG5ldyBUcmVlKCApIDtcblxuTGF6eS5wcm90b3R5cGUuZm9yY2UgPSBmdW5jdGlvbiAoICkge1xuXHRpZiAoIHRoaXMudHJlZSA9PT0gbnVsbCApIHtcblx0XHR0aGlzLnRyZWUgPSB0aGlzLnRodW5rKCApIDtcblx0XHR0aGlzLnRodW5rID0gbnVsbCA7XG5cdH1cblx0cmV0dXJuIHRoaXMudHJlZSA7XG59IDtcblxuTGF6eS5wcm90b3R5cGUuZW1wdHkgPSBmdW5jdGlvbiAoICkge1xuXHRyZXR1cm4gdGhpcy5mb3JjZSggKS5lbXB0eSggKSA7XG59IDtcblxuTGF6eS5wcm90b3R5cGUubWVhc3VyZSA9IGZ1bmN0aW9uICggKSB7XG5cdHJldHVybiB0aGlzLmZvcmNlKCApLm1lYXN1cmUoICkgO1xufSA7XG5cbkxhenkucHJvdG90eXBlLmhlYWQgPSBmdW5jdGlvbiAoICkge1xuXHRyZXR1cm4gdGhpcy5mb3JjZSggKS5oZWFkKCApIDtcbn0gO1xuXG5MYXp5LnByb3RvdHlwZS5sYXN0ID0gZnVuY3Rpb24gKCApIHtcblx0cmV0dXJuIHRoaXMuZm9yY2UoICkubGFzdCggKSA7XG59IDtcblxuTGF6eS5wcm90b3R5cGUuY29ucyA9IGZ1bmN0aW9uICggdmFsdWUgKSB7XG5cdHJldHVybiB0aGlzLmZvcmNlKCApLmNvbnMoIHZhbHVlICkgO1xufSA7XG5cbkxhenkucHJvdG90eXBlLnB1c2ggPSBmdW5jdGlvbiAoIHZhbHVlICkge1xuXHRyZXR1cm4gdGhpcy5mb3JjZSggKS5wdXNoKCB2YWx1ZSApIDtcbn0gO1xuXG5MYXp5LnByb3RvdHlwZS50YWlsID0gZnVuY3Rpb24gKCApIHtcblx0cmV0dXJuIHRoaXMuZm9yY2UoICkudGFpbCggKSA7XG59IDtcblxuTGF6eS5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uICggKSB7XG5cdHJldHVybiB0aGlzLmZvcmNlKCApLmluaXQoICkgO1xufSA7XG5cbkxhenkucHJvdG90eXBlLnNwbGl0VHJlZSA9IGZ1bmN0aW9uICggcCAsIGkgKSB7XG5cdHJldHVybiB0aGlzLmZvcmNlKCApLnNwbGl0VHJlZSggcCAsIGkgKSA7XG59IDtcblxuTGF6eS5wcm90b3R5cGUuc3BsaXQgPSBmdW5jdGlvbiAoIHAgKSB7XG5cdHJldHVybiB0aGlzLmZvcmNlKCApLnNwbGl0KCBwICkgO1xufSA7XG5cbkxhenkucHJvdG90eXBlLmNvbmNhdCA9IGZ1bmN0aW9uICggb3RoZXIgKSB7XG5cdHJldHVybiB0aGlzLmZvcmNlKCApLmNvbmNhdCggb3RoZXIgKSA7XG59IDtcblxuTGF6eS5wcm90b3R5cGVbU3ltYm9sLml0ZXJhdG9yXSA9IGZ1bmN0aW9uICggKSB7XG5cdHJldHVybiB0aGlzLmZvcmNlKCApW1N5bWJvbC5pdGVyYXRvcl0oICkgO1xufSA7XG4iXX0=