"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Lazy = Lazy;

var _Tree = require("../3-tree/base/Tree");

function Lazy(thunk) {
  this.tree = null;
  this.thunk = thunk;
}

Lazy.prototype = new _Tree.Tree();

Lazy.prototype.force = function () {
  if (this.tree === null) {
    this.tree = this.thunk();
    this.thunk = null;
  }

  return this.tree;
};

Lazy.prototype.empty = function () {
  return this.force().empty();
};

Lazy.prototype.measure = function () {
  return this.force().measure();
};

Lazy.prototype.head = function () {
  return this.force().head();
};

Lazy.prototype.last = function () {
  return this.force().last();
};

Lazy.prototype.cons = function (value) {
  return this.force().cons(value);
};

Lazy.prototype.push = function (value) {
  return this.force().push(value);
};

Lazy.prototype.tail = function () {
  return this.force().tail();
};

Lazy.prototype.init = function () {
  return this.force().init();
};

Lazy.prototype.splitTree = function (p, i) {
  return this.force().splitTree(p, i);
};

Lazy.prototype.split = function (p) {
  return this.force().split(p);
};

Lazy.prototype.concat = function (other) {
  return this.force().concat(other);
};

Lazy.prototype[Symbol.iterator] = function () {
  return this.force()[Symbol.iterator]();
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy80LWxhenkvMC1MYXp5LmpzIl0sIm5hbWVzIjpbIkxhenkiLCJ0aHVuayIsInRyZWUiLCJwcm90b3R5cGUiLCJUcmVlIiwiZm9yY2UiLCJlbXB0eSIsIm1lYXN1cmUiLCJoZWFkIiwibGFzdCIsImNvbnMiLCJ2YWx1ZSIsInB1c2giLCJ0YWlsIiwiaW5pdCIsInNwbGl0VHJlZSIsInAiLCJpIiwic3BsaXQiLCJjb25jYXQiLCJvdGhlciIsIlN5bWJvbCIsIml0ZXJhdG9yIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBRU8sU0FBU0EsSUFBVCxDQUFnQkMsS0FBaEIsRUFBd0I7QUFDOUIsT0FBS0MsSUFBTCxHQUFZLElBQVo7QUFDQSxPQUFLRCxLQUFMLEdBQWFBLEtBQWI7QUFDQTs7QUFFREQsSUFBSSxDQUFDRyxTQUFMLEdBQWlCLElBQUlDLFVBQUosRUFBakI7O0FBRUFKLElBQUksQ0FBQ0csU0FBTCxDQUFlRSxLQUFmLEdBQXVCLFlBQWE7QUFDbkMsTUFBSyxLQUFLSCxJQUFMLEtBQWMsSUFBbkIsRUFBMEI7QUFDekIsU0FBS0EsSUFBTCxHQUFZLEtBQUtELEtBQUwsRUFBWjtBQUNBLFNBQUtBLEtBQUwsR0FBYSxJQUFiO0FBQ0E7O0FBQ0QsU0FBTyxLQUFLQyxJQUFaO0FBQ0EsQ0FORDs7QUFRQUYsSUFBSSxDQUFDRyxTQUFMLENBQWVHLEtBQWYsR0FBdUIsWUFBYTtBQUNuQyxTQUFPLEtBQUtELEtBQUwsR0FBY0MsS0FBZCxFQUFQO0FBQ0EsQ0FGRDs7QUFJQU4sSUFBSSxDQUFDRyxTQUFMLENBQWVJLE9BQWYsR0FBeUIsWUFBYTtBQUNyQyxTQUFPLEtBQUtGLEtBQUwsR0FBY0UsT0FBZCxFQUFQO0FBQ0EsQ0FGRDs7QUFJQVAsSUFBSSxDQUFDRyxTQUFMLENBQWVLLElBQWYsR0FBc0IsWUFBYTtBQUNsQyxTQUFPLEtBQUtILEtBQUwsR0FBY0csSUFBZCxFQUFQO0FBQ0EsQ0FGRDs7QUFJQVIsSUFBSSxDQUFDRyxTQUFMLENBQWVNLElBQWYsR0FBc0IsWUFBYTtBQUNsQyxTQUFPLEtBQUtKLEtBQUwsR0FBY0ksSUFBZCxFQUFQO0FBQ0EsQ0FGRDs7QUFJQVQsSUFBSSxDQUFDRyxTQUFMLENBQWVPLElBQWYsR0FBc0IsVUFBV0MsS0FBWCxFQUFtQjtBQUN4QyxTQUFPLEtBQUtOLEtBQUwsR0FBY0ssSUFBZCxDQUFvQkMsS0FBcEIsQ0FBUDtBQUNBLENBRkQ7O0FBSUFYLElBQUksQ0FBQ0csU0FBTCxDQUFlUyxJQUFmLEdBQXNCLFVBQVdELEtBQVgsRUFBbUI7QUFDeEMsU0FBTyxLQUFLTixLQUFMLEdBQWNPLElBQWQsQ0FBb0JELEtBQXBCLENBQVA7QUFDQSxDQUZEOztBQUlBWCxJQUFJLENBQUNHLFNBQUwsQ0FBZVUsSUFBZixHQUFzQixZQUFhO0FBQ2xDLFNBQU8sS0FBS1IsS0FBTCxHQUFjUSxJQUFkLEVBQVA7QUFDQSxDQUZEOztBQUlBYixJQUFJLENBQUNHLFNBQUwsQ0FBZVcsSUFBZixHQUFzQixZQUFhO0FBQ2xDLFNBQU8sS0FBS1QsS0FBTCxHQUFjUyxJQUFkLEVBQVA7QUFDQSxDQUZEOztBQUlBZCxJQUFJLENBQUNHLFNBQUwsQ0FBZVksU0FBZixHQUEyQixVQUFXQyxDQUFYLEVBQWVDLENBQWYsRUFBbUI7QUFDN0MsU0FBTyxLQUFLWixLQUFMLEdBQWNVLFNBQWQsQ0FBeUJDLENBQXpCLEVBQTZCQyxDQUE3QixDQUFQO0FBQ0EsQ0FGRDs7QUFJQWpCLElBQUksQ0FBQ0csU0FBTCxDQUFlZSxLQUFmLEdBQXVCLFVBQVdGLENBQVgsRUFBZTtBQUNyQyxTQUFPLEtBQUtYLEtBQUwsR0FBY2EsS0FBZCxDQUFxQkYsQ0FBckIsQ0FBUDtBQUNBLENBRkQ7O0FBSUFoQixJQUFJLENBQUNHLFNBQUwsQ0FBZWdCLE1BQWYsR0FBd0IsVUFBV0MsS0FBWCxFQUFtQjtBQUMxQyxTQUFPLEtBQUtmLEtBQUwsR0FBY2MsTUFBZCxDQUFzQkMsS0FBdEIsQ0FBUDtBQUNBLENBRkQ7O0FBSUFwQixJQUFJLENBQUNHLFNBQUwsQ0FBZWtCLE1BQU0sQ0FBQ0MsUUFBdEIsSUFBa0MsWUFBYTtBQUM5QyxTQUFPLEtBQUtqQixLQUFMLEdBQWNnQixNQUFNLENBQUNDLFFBQXJCLEdBQVA7QUFDQSxDQUZEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVHJlZSB9IGZyb20gJy4uLzMtdHJlZS9iYXNlL1RyZWUnIDtcblxuZXhwb3J0IGZ1bmN0aW9uIExhenkgKCB0aHVuayApIHtcblx0dGhpcy50cmVlID0gbnVsbCA7XG5cdHRoaXMudGh1bmsgPSB0aHVuayA7XG59XG5cbkxhenkucHJvdG90eXBlID0gbmV3IFRyZWUoICkgO1xuXG5MYXp5LnByb3RvdHlwZS5mb3JjZSA9IGZ1bmN0aW9uICggKSB7XG5cdGlmICggdGhpcy50cmVlID09PSBudWxsICkge1xuXHRcdHRoaXMudHJlZSA9IHRoaXMudGh1bmsoICkgO1xuXHRcdHRoaXMudGh1bmsgPSBudWxsIDtcblx0fVxuXHRyZXR1cm4gdGhpcy50cmVlIDtcbn0gO1xuXG5MYXp5LnByb3RvdHlwZS5lbXB0eSA9IGZ1bmN0aW9uICggKSB7XG5cdHJldHVybiB0aGlzLmZvcmNlKCApLmVtcHR5KCApIDtcbn0gO1xuXG5MYXp5LnByb3RvdHlwZS5tZWFzdXJlID0gZnVuY3Rpb24gKCApIHtcblx0cmV0dXJuIHRoaXMuZm9yY2UoICkubWVhc3VyZSggKSA7XG59IDtcblxuTGF6eS5wcm90b3R5cGUuaGVhZCA9IGZ1bmN0aW9uICggKSB7XG5cdHJldHVybiB0aGlzLmZvcmNlKCApLmhlYWQoICkgO1xufSA7XG5cbkxhenkucHJvdG90eXBlLmxhc3QgPSBmdW5jdGlvbiAoICkge1xuXHRyZXR1cm4gdGhpcy5mb3JjZSggKS5sYXN0KCApIDtcbn0gO1xuXG5MYXp5LnByb3RvdHlwZS5jb25zID0gZnVuY3Rpb24gKCB2YWx1ZSApIHtcblx0cmV0dXJuIHRoaXMuZm9yY2UoICkuY29ucyggdmFsdWUgKSA7XG59IDtcblxuTGF6eS5wcm90b3R5cGUucHVzaCA9IGZ1bmN0aW9uICggdmFsdWUgKSB7XG5cdHJldHVybiB0aGlzLmZvcmNlKCApLnB1c2goIHZhbHVlICkgO1xufSA7XG5cbkxhenkucHJvdG90eXBlLnRhaWwgPSBmdW5jdGlvbiAoICkge1xuXHRyZXR1cm4gdGhpcy5mb3JjZSggKS50YWlsKCApIDtcbn0gO1xuXG5MYXp5LnByb3RvdHlwZS5pbml0ID0gZnVuY3Rpb24gKCApIHtcblx0cmV0dXJuIHRoaXMuZm9yY2UoICkuaW5pdCggKSA7XG59IDtcblxuTGF6eS5wcm90b3R5cGUuc3BsaXRUcmVlID0gZnVuY3Rpb24gKCBwICwgaSApIHtcblx0cmV0dXJuIHRoaXMuZm9yY2UoICkuc3BsaXRUcmVlKCBwICwgaSApIDtcbn0gO1xuXG5MYXp5LnByb3RvdHlwZS5zcGxpdCA9IGZ1bmN0aW9uICggcCApIHtcblx0cmV0dXJuIHRoaXMuZm9yY2UoICkuc3BsaXQoIHAgKSA7XG59IDtcblxuTGF6eS5wcm90b3R5cGUuY29uY2F0ID0gZnVuY3Rpb24gKCBvdGhlciApIHtcblx0cmV0dXJuIHRoaXMuZm9yY2UoICkuY29uY2F0KCBvdGhlciApIDtcbn0gO1xuXG5MYXp5LnByb3RvdHlwZVtTeW1ib2wuaXRlcmF0b3JdID0gZnVuY3Rpb24gKCApIHtcblx0cmV0dXJuIHRoaXMuZm9yY2UoIClbU3ltYm9sLml0ZXJhdG9yXSggKSA7XG59IDtcbiJdfQ==