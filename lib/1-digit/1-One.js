'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.One = One;

var _ = require('.');

var _node = require('../2-node');

var _core = require('../0-core');

function One(a) {
	this.a = a;
	this.v = null;
}

One.prototype = new _.Digit();

One.prototype.measure = function (M) {
	if (this.v === null) this.v = M.measure(this.a);
	return this.v;
};

One.prototype.head = function () {
	return this.a;
};

One.prototype.last = function () {
	return this.a;
};

One.prototype.init = function () {
	throw new Error("cannot call init on digit One");
};

One.prototype.tail = function () {
	throw new Error("cannot call tail on digit One");
};

One.prototype.push = function (value) {
	return new _.Two(this.a, value);
};

One.prototype.cons = function (value) {
	return new _.Two(value, this.a);
};

One.prototype.node = function (M) {
	throw new Error("cannot convert One to node");
};

/**
 * It is assumed that p(|this|) is true.
 */
One.prototype.splitDigit = function (p, i, M) {
	return new _core.Split([], this.a, []);
};

One.prototype._nodes = function (M, other) {
	if (other instanceof One) return [(0, _node.node2)(M, this.a, other.a)];
	if (other instanceof _.Two) return [(0, _node.node3)(M, this.a, other.a, other.b)];
	if (other instanceof _.Three) return [(0, _node.node2)(M, this.a, other.a), (0, _node.node2)(M, other.b, other.c)];
	return [(0, _node.node3)(M, this.a, other.a, other.b), (0, _node.node2)(M, other.c, other.d)];
};

One.prototype._list = function () {
	return [this.a];
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy8xLWRpZ2l0LzEtT25lLmpzIl0sIm5hbWVzIjpbIk9uZSIsImEiLCJ2IiwicHJvdG90eXBlIiwibWVhc3VyZSIsIk0iLCJoZWFkIiwibGFzdCIsImluaXQiLCJFcnJvciIsInRhaWwiLCJwdXNoIiwidmFsdWUiLCJjb25zIiwibm9kZSIsInNwbGl0RGlnaXQiLCJwIiwiaSIsIl9ub2RlcyIsIm90aGVyIiwiYiIsImMiLCJkIiwiX2xpc3QiXSwibWFwcGluZ3MiOiI7Ozs7O1FBSWdCQSxHLEdBQUFBLEc7O0FBSmhCOztBQUNBOztBQUNBOztBQUVPLFNBQVNBLEdBQVQsQ0FBZUMsQ0FBZixFQUFtQjtBQUN6QixNQUFLQSxDQUFMLEdBQVNBLENBQVQ7QUFDQSxNQUFLQyxDQUFMLEdBQVMsSUFBVDtBQUNBOztBQUVERixJQUFJRyxTQUFKLEdBQWdCLGFBQWhCOztBQUVBSCxJQUFJRyxTQUFKLENBQWNDLE9BQWQsR0FBd0IsVUFBV0MsQ0FBWCxFQUFlO0FBQ3RDLEtBQUssS0FBS0gsQ0FBTCxLQUFXLElBQWhCLEVBQXVCLEtBQUtBLENBQUwsR0FBU0csRUFBRUQsT0FBRixDQUFXLEtBQUtILENBQWhCLENBQVQ7QUFDdkIsUUFBTyxLQUFLQyxDQUFaO0FBQ0EsQ0FIRDs7QUFLQUYsSUFBSUcsU0FBSixDQUFjRyxJQUFkLEdBQXFCLFlBQWE7QUFDakMsUUFBTyxLQUFLTCxDQUFaO0FBQ0EsQ0FGRDs7QUFJQUQsSUFBSUcsU0FBSixDQUFjSSxJQUFkLEdBQXFCLFlBQWE7QUFDakMsUUFBTyxLQUFLTixDQUFaO0FBQ0EsQ0FGRDs7QUFJQUQsSUFBSUcsU0FBSixDQUFjSyxJQUFkLEdBQXFCLFlBQWE7QUFDakMsT0FBTSxJQUFJQyxLQUFKLENBQVcsK0JBQVgsQ0FBTjtBQUNBLENBRkQ7O0FBSUFULElBQUlHLFNBQUosQ0FBY08sSUFBZCxHQUFxQixZQUFhO0FBQ2pDLE9BQU0sSUFBSUQsS0FBSixDQUFXLCtCQUFYLENBQU47QUFDQSxDQUZEOztBQUlBVCxJQUFJRyxTQUFKLENBQWNRLElBQWQsR0FBcUIsVUFBV0MsS0FBWCxFQUFtQjtBQUN2QyxRQUFPLFVBQVMsS0FBS1gsQ0FBZCxFQUFrQlcsS0FBbEIsQ0FBUDtBQUNBLENBRkQ7O0FBSUFaLElBQUlHLFNBQUosQ0FBY1UsSUFBZCxHQUFxQixVQUFXRCxLQUFYLEVBQW1CO0FBQ3ZDLFFBQU8sVUFBU0EsS0FBVCxFQUFpQixLQUFLWCxDQUF0QixDQUFQO0FBQ0EsQ0FGRDs7QUFJQUQsSUFBSUcsU0FBSixDQUFjVyxJQUFkLEdBQXFCLFVBQVdULENBQVgsRUFBZTtBQUNuQyxPQUFNLElBQUlJLEtBQUosQ0FBVyw0QkFBWCxDQUFOO0FBQ0EsQ0FGRDs7QUFJQTs7O0FBR0FULElBQUlHLFNBQUosQ0FBY1ksVUFBZCxHQUEyQixVQUFXQyxDQUFYLEVBQWVDLENBQWYsRUFBbUJaLENBQW5CLEVBQXVCO0FBQ2pELFFBQU8sZ0JBQVcsRUFBWCxFQUFpQixLQUFLSixDQUF0QixFQUEwQixFQUExQixDQUFQO0FBQ0EsQ0FGRDs7QUFJQUQsSUFBSUcsU0FBSixDQUFjZSxNQUFkLEdBQXVCLFVBQVdiLENBQVgsRUFBZWMsS0FBZixFQUF1QjtBQUM3QyxLQUFLQSxpQkFBaUJuQixHQUF0QixFQUNDLE9BQU8sQ0FBRSxpQkFBT0ssQ0FBUCxFQUFXLEtBQUtKLENBQWhCLEVBQW9Ca0IsTUFBTWxCLENBQTFCLENBQUYsQ0FBUDtBQUNELEtBQUtrQixzQkFBTCxFQUNDLE9BQU8sQ0FBRSxpQkFBT2QsQ0FBUCxFQUFXLEtBQUtKLENBQWhCLEVBQW9Ca0IsTUFBTWxCLENBQTFCLEVBQThCa0IsTUFBTUMsQ0FBcEMsQ0FBRixDQUFQO0FBQ0QsS0FBS0Qsd0JBQUwsRUFDQyxPQUFPLENBQUUsaUJBQU9kLENBQVAsRUFBVyxLQUFLSixDQUFoQixFQUFvQmtCLE1BQU1sQixDQUExQixDQUFGLEVBQWtDLGlCQUFPSSxDQUFQLEVBQVdjLE1BQU1DLENBQWpCLEVBQXFCRCxNQUFNRSxDQUEzQixDQUFsQyxDQUFQO0FBQ0QsUUFBTyxDQUFFLGlCQUFPaEIsQ0FBUCxFQUFXLEtBQUtKLENBQWhCLEVBQW9Ca0IsTUFBTWxCLENBQTFCLEVBQThCa0IsTUFBTUMsQ0FBcEMsQ0FBRixFQUE0QyxpQkFBT2YsQ0FBUCxFQUFXYyxNQUFNRSxDQUFqQixFQUFxQkYsTUFBTUcsQ0FBM0IsQ0FBNUMsQ0FBUDtBQUNBLENBUkQ7O0FBVUF0QixJQUFJRyxTQUFKLENBQWNvQixLQUFkLEdBQXNCLFlBQWE7QUFDbEMsUUFBTyxDQUFFLEtBQUt0QixDQUFQLENBQVA7QUFDQSxDQUZEIiwiZmlsZSI6IjEtT25lLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlnaXQgLCBUd28gLCBUaHJlZSB9IGZyb20gJy4nIDtcbmltcG9ydCB7IG5vZGUyICwgbm9kZTMgfSBmcm9tICcuLi8yLW5vZGUnIDtcbmltcG9ydCB7IFNwbGl0IH0gZnJvbSAnLi4vMC1jb3JlJyA7XG5cbmV4cG9ydCBmdW5jdGlvbiBPbmUgKCBhICkge1xuXHR0aGlzLmEgPSBhIDtcblx0dGhpcy52ID0gbnVsbCA7XG59XG5cbk9uZS5wcm90b3R5cGUgPSBuZXcgRGlnaXQoICkgO1xuXG5PbmUucHJvdG90eXBlLm1lYXN1cmUgPSBmdW5jdGlvbiAoIE0gKSB7XG5cdGlmICggdGhpcy52ID09PSBudWxsICkgdGhpcy52ID0gTS5tZWFzdXJlKCB0aGlzLmEgKSA7XG5cdHJldHVybiB0aGlzLnYgO1xufSA7XG5cbk9uZS5wcm90b3R5cGUuaGVhZCA9IGZ1bmN0aW9uICggKSB7XG5cdHJldHVybiB0aGlzLmEgO1xufSA7XG5cbk9uZS5wcm90b3R5cGUubGFzdCA9IGZ1bmN0aW9uICggKSB7XG5cdHJldHVybiB0aGlzLmEgO1xufSA7XG5cbk9uZS5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uICggKSB7XG5cdHRocm93IG5ldyBFcnJvciggXCJjYW5ub3QgY2FsbCBpbml0IG9uIGRpZ2l0IE9uZVwiICkgO1xufSA7XG5cbk9uZS5wcm90b3R5cGUudGFpbCA9IGZ1bmN0aW9uICggKSB7XG5cdHRocm93IG5ldyBFcnJvciggXCJjYW5ub3QgY2FsbCB0YWlsIG9uIGRpZ2l0IE9uZVwiICkgO1xufSA7XG5cbk9uZS5wcm90b3R5cGUucHVzaCA9IGZ1bmN0aW9uICggdmFsdWUgKSB7XG5cdHJldHVybiBuZXcgVHdvKCB0aGlzLmEgLCB2YWx1ZSApIDtcbn0gO1xuXG5PbmUucHJvdG90eXBlLmNvbnMgPSBmdW5jdGlvbiAoIHZhbHVlICkge1xuXHRyZXR1cm4gbmV3IFR3byggdmFsdWUgLCB0aGlzLmEgKSA7XG59IDtcblxuT25lLnByb3RvdHlwZS5ub2RlID0gZnVuY3Rpb24gKCBNICkge1xuXHR0aHJvdyBuZXcgRXJyb3IoIFwiY2Fubm90IGNvbnZlcnQgT25lIHRvIG5vZGVcIiApIDtcbn0gO1xuXG4vKipcbiAqIEl0IGlzIGFzc3VtZWQgdGhhdCBwKHx0aGlzfCkgaXMgdHJ1ZS5cbiAqL1xuT25lLnByb3RvdHlwZS5zcGxpdERpZ2l0ID0gZnVuY3Rpb24gKCBwICwgaSAsIE0gKSB7XG5cdHJldHVybiBuZXcgU3BsaXQoIFsgXSAsIHRoaXMuYSAsIFsgXSApIDtcbn0gO1xuXG5PbmUucHJvdG90eXBlLl9ub2RlcyA9IGZ1bmN0aW9uICggTSAsIG90aGVyICkge1xuXHRpZiAoIG90aGVyIGluc3RhbmNlb2YgT25lIClcblx0XHRyZXR1cm4gWyBub2RlMiggTSAsIHRoaXMuYSAsIG90aGVyLmEgKSBdIDtcblx0aWYgKCBvdGhlciBpbnN0YW5jZW9mIFR3byApXG5cdFx0cmV0dXJuIFsgbm9kZTMoIE0gLCB0aGlzLmEgLCBvdGhlci5hICwgb3RoZXIuYiApIF0gO1xuXHRpZiAoIG90aGVyIGluc3RhbmNlb2YgVGhyZWUgKVxuXHRcdHJldHVybiBbIG5vZGUyKCBNICwgdGhpcy5hICwgb3RoZXIuYSApICwgbm9kZTIoIE0gLCBvdGhlci5iICwgb3RoZXIuYyApIF0gO1xuXHRyZXR1cm4gWyBub2RlMyggTSAsIHRoaXMuYSAsIG90aGVyLmEgLCBvdGhlci5iICkgLCBub2RlMiggTSAsIG90aGVyLmMgLCBvdGhlci5kICkgXSA7XG59IDtcblxuT25lLnByb3RvdHlwZS5fbGlzdCA9IGZ1bmN0aW9uICggKSB7XG5cdHJldHVybiBbIHRoaXMuYSBdIDtcbn0gO1xuIl19