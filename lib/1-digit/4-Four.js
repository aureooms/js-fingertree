"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Four = Four;

var _ = require(".");

var _node = require("../2-node");

var _core = require("../0-core");

function Four(a, b, c, d) {
  this.a = a;
  this.b = b;
  this.c = c;
  this.d = d;
  this.v = null;
}

Four.prototype = new _.Digit();

Four.prototype.measure = function (M) {
  if (this.v === null) this.v = M.plus(M.measure(this.a), M.plus(M.measure(this.b), M.plus(M.measure(this.c), M.measure(this.d))));
  return this.v;
};

Four.prototype.head = function () {
  return this.a;
};

Four.prototype.last = function () {
  return this.d;
};

Four.prototype.init = function () {
  return new _.Three(this.a, this.b, this.c);
};

Four.prototype.tail = function () {
  return new _.Three(this.b, this.c, this.d);
};

Four.prototype.push = function (value) {
  throw new Error("cannot push digit Four");
};

Four.prototype.cons = function (value) {
  throw new Error("cannot cons digit Four");
};

Four.prototype.node = function (M) {
  throw new Error("cannot convert Four to node");
};
/**
 * It is assumed that p(|this|) is true.
 */


Four.prototype.splitDigit = function (p, i, M) {
  i = M.plus(i, M.measure(this.a));
  if (p(i)) return new _core.Split([], this.a, [this.b, this.c, this.d]);
  i = M.plus(i, M.measure(this.b));
  if (p(i)) return new _core.Split([this.a], this.b, [this.c, this.d]);
  i = M.plus(i, M.measure(this.c));
  if (p(i)) return new _core.Split([this.a, this.b], this.c, [this.d]);
  return new _core.Split([this.a, this.b, this.c], this.d, []);
};

Four.prototype._nodes = function (M, other) {
  if (other instanceof _.One) return [(0, _node.node3)(M, this.a, this.b, this.c), (0, _node.node2)(M, this.d, other.a)];
  if (other instanceof _.Two) return [(0, _node.node3)(M, this.a, this.b, this.c), (0, _node.node3)(M, this.d, other.a, other.b)];
  if (other instanceof _.Three) return [(0, _node.node3)(M, this.a, this.b, this.c), (0, _node.node2)(M, this.d, other.a), (0, _node.node2)(M, other.b, other.c)];
  return [(0, _node.node3)(M, this.a, this.b, this.c), (0, _node.node3)(M, this.d, other.a, other.b), (0, _node.node2)(M, other.c, other.d)];
};

Four.prototype._list = function () {
  return [this.a, this.b, this.c, this.d];
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,