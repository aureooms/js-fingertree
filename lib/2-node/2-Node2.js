"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Node2 = Node2;
exports.node2 = node2;

var _digit = require("../1-digit");

function Node2(v, a, b) {
  this.v = v;
  this.a = a;
  this.b = b;
}

Node2.prototype[Symbol.iterator] = function () {
  return [this.a, this.b][Symbol.iterator]();
};

Node2.prototype.measure = function () {
  return this.v;
};

Node2.prototype.digit = function () {
  return new _digit.Two(this.a, this.b);
};

Node2.prototype.head = function () {
  throw new Error("trying to call head of Node2");
};

Node2.prototype.last = function () {
  throw new Error("trying to call last of Node2");
};

Node2.prototype.init = function () {
  throw new Error("trying to call init of Node2");
};

Node2.prototype.tail = function () {
  throw new Error("trying to call tail of Node2");
};

Node2.prototype.push = function (value) {
  throw new Error("trying to call push of Node2");
};

Node2.prototype.cons = function (value) {
  throw new Error("trying to call cons of Node2");
};

function node2(M, a, b) {
  return new Node2(M.plus(M.measure(a), M.measure(b)), a, b);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy8yLW5vZGUvMi1Ob2RlMi5qcyJdLCJuYW1lcyI6WyJOb2RlMiIsInYiLCJhIiwiYiIsInByb3RvdHlwZSIsIlN5bWJvbCIsIml0ZXJhdG9yIiwibWVhc3VyZSIsImRpZ2l0IiwiVHdvIiwiaGVhZCIsIkVycm9yIiwibGFzdCIsImluaXQiLCJ0YWlsIiwicHVzaCIsInZhbHVlIiwiY29ucyIsIm5vZGUyIiwiTSIsInBsdXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7O0FBRU8sU0FBU0EsS0FBVCxDQUFpQkMsQ0FBakIsRUFBcUJDLENBQXJCLEVBQXlCQyxDQUF6QixFQUE2QjtBQUNuQyxPQUFLRixDQUFMLEdBQVNBLENBQVQ7QUFDQSxPQUFLQyxDQUFMLEdBQVNBLENBQVQ7QUFDQSxPQUFLQyxDQUFMLEdBQVNBLENBQVQ7QUFDQTs7QUFFREgsS0FBSyxDQUFDSSxTQUFOLENBQWdCQyxNQUFNLENBQUNDLFFBQXZCLElBQW1DLFlBQWE7QUFDL0MsU0FBTyxDQUFFLEtBQUtKLENBQVAsRUFBVyxLQUFLQyxDQUFoQixFQUFvQkUsTUFBTSxDQUFDQyxRQUEzQixHQUFQO0FBQ0EsQ0FGRDs7QUFJQU4sS0FBSyxDQUFDSSxTQUFOLENBQWdCRyxPQUFoQixHQUEwQixZQUFhO0FBQ3RDLFNBQU8sS0FBS04sQ0FBWjtBQUNBLENBRkQ7O0FBSUFELEtBQUssQ0FBQ0ksU0FBTixDQUFnQkksS0FBaEIsR0FBd0IsWUFBYTtBQUNwQyxTQUFPLElBQUlDLFVBQUosQ0FBUyxLQUFLUCxDQUFkLEVBQWtCLEtBQUtDLENBQXZCLENBQVA7QUFDQSxDQUZEOztBQUlBSCxLQUFLLENBQUNJLFNBQU4sQ0FBZ0JNLElBQWhCLEdBQXVCLFlBQWE7QUFDbkMsUUFBTSxJQUFJQyxLQUFKLENBQVcsOEJBQVgsQ0FBTjtBQUNBLENBRkQ7O0FBSUFYLEtBQUssQ0FBQ0ksU0FBTixDQUFnQlEsSUFBaEIsR0FBdUIsWUFBYTtBQUNuQyxRQUFNLElBQUlELEtBQUosQ0FBVyw4QkFBWCxDQUFOO0FBQ0EsQ0FGRDs7QUFJQVgsS0FBSyxDQUFDSSxTQUFOLENBQWdCUyxJQUFoQixHQUF1QixZQUFhO0FBQ25DLFFBQU0sSUFBSUYsS0FBSixDQUFXLDhCQUFYLENBQU47QUFDQSxDQUZEOztBQUlBWCxLQUFLLENBQUNJLFNBQU4sQ0FBZ0JVLElBQWhCLEdBQXVCLFlBQWE7QUFDbkMsUUFBTSxJQUFJSCxLQUFKLENBQVcsOEJBQVgsQ0FBTjtBQUNBLENBRkQ7O0FBSUFYLEtBQUssQ0FBQ0ksU0FBTixDQUFnQlcsSUFBaEIsR0FBdUIsVUFBV0MsS0FBWCxFQUFtQjtBQUN6QyxRQUFNLElBQUlMLEtBQUosQ0FBVyw4QkFBWCxDQUFOO0FBQ0EsQ0FGRDs7QUFJQVgsS0FBSyxDQUFDSSxTQUFOLENBQWdCYSxJQUFoQixHQUF1QixVQUFXRCxLQUFYLEVBQW1CO0FBQ3pDLFFBQU0sSUFBSUwsS0FBSixDQUFXLDhCQUFYLENBQU47QUFDQSxDQUZEOztBQUtPLFNBQVNPLEtBQVQsQ0FBaUJDLENBQWpCLEVBQXFCakIsQ0FBckIsRUFBeUJDLENBQXpCLEVBQTZCO0FBQ25DLFNBQU8sSUFBSUgsS0FBSixDQUFXbUIsQ0FBQyxDQUFDQyxJQUFGLENBQVFELENBQUMsQ0FBQ1osT0FBRixDQUFXTCxDQUFYLENBQVIsRUFBeUJpQixDQUFDLENBQUNaLE9BQUYsQ0FBV0osQ0FBWCxDQUF6QixDQUFYLEVBQXVERCxDQUF2RCxFQUEyREMsQ0FBM0QsQ0FBUDtBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVHdvIH0gZnJvbSAnLi4vMS1kaWdpdCcgO1xuXG5leHBvcnQgZnVuY3Rpb24gTm9kZTIgKCB2ICwgYSAsIGIgKSB7XG5cdHRoaXMudiA9IHYgO1xuXHR0aGlzLmEgPSBhIDtcblx0dGhpcy5iID0gYiA7XG59XG5cbk5vZGUyLnByb3RvdHlwZVtTeW1ib2wuaXRlcmF0b3JdID0gZnVuY3Rpb24gKCApIHtcblx0cmV0dXJuIFsgdGhpcy5hICwgdGhpcy5iIF1bU3ltYm9sLml0ZXJhdG9yXSggKSA7XG59IDtcblxuTm9kZTIucHJvdG90eXBlLm1lYXN1cmUgPSBmdW5jdGlvbiAoICkge1xuXHRyZXR1cm4gdGhpcy52IDtcbn0gO1xuXG5Ob2RlMi5wcm90b3R5cGUuZGlnaXQgPSBmdW5jdGlvbiAoICkge1xuXHRyZXR1cm4gbmV3IFR3byggdGhpcy5hICwgdGhpcy5iICkgO1xufSA7XG5cbk5vZGUyLnByb3RvdHlwZS5oZWFkID0gZnVuY3Rpb24gKCApIHtcblx0dGhyb3cgbmV3IEVycm9yKCBcInRyeWluZyB0byBjYWxsIGhlYWQgb2YgTm9kZTJcIiApIDtcbn0gO1xuXG5Ob2RlMi5wcm90b3R5cGUubGFzdCA9IGZ1bmN0aW9uICggKSB7XG5cdHRocm93IG5ldyBFcnJvciggXCJ0cnlpbmcgdG8gY2FsbCBsYXN0IG9mIE5vZGUyXCIgKSA7XG59IDtcblxuTm9kZTIucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbiAoICkge1xuXHR0aHJvdyBuZXcgRXJyb3IoIFwidHJ5aW5nIHRvIGNhbGwgaW5pdCBvZiBOb2RlMlwiICkgO1xufSA7XG5cbk5vZGUyLnByb3RvdHlwZS50YWlsID0gZnVuY3Rpb24gKCApIHtcblx0dGhyb3cgbmV3IEVycm9yKCBcInRyeWluZyB0byBjYWxsIHRhaWwgb2YgTm9kZTJcIiApIDtcbn0gO1xuXG5Ob2RlMi5wcm90b3R5cGUucHVzaCA9IGZ1bmN0aW9uICggdmFsdWUgKSB7XG5cdHRocm93IG5ldyBFcnJvciggXCJ0cnlpbmcgdG8gY2FsbCBwdXNoIG9mIE5vZGUyXCIgKSA7XG59IDtcblxuTm9kZTIucHJvdG90eXBlLmNvbnMgPSBmdW5jdGlvbiAoIHZhbHVlICkge1xuXHR0aHJvdyBuZXcgRXJyb3IoIFwidHJ5aW5nIHRvIGNhbGwgY29ucyBvZiBOb2RlMlwiICkgO1xufSA7XG5cblxuZXhwb3J0IGZ1bmN0aW9uIG5vZGUyICggTSAsIGEgLCBiICkge1xuXHRyZXR1cm4gbmV3IE5vZGUyKCBNLnBsdXMoIE0ubWVhc3VyZSggYSApICwgTS5tZWFzdXJlKCBiICkgKSAsIGEgLCBiICkgO1xufVxuIl19