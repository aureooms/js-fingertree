"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.Node3 = Node3;
exports.node3 = node3;

var _digit = require("../1-digit");

function Node3(v, a, b, c) {
	this.v = v;
	this.a = a;
	this.b = b;
	this.c = c;
}

Node3.prototype[Symbol.iterator] = function () {
	return [this.a, this.b, this.c][Symbol.iterator]();
};

Node3.prototype.measure = function () {
	return this.v;
};

Node3.prototype.digit = function () {
	return new _digit.Three(this.a, this.b, this.c);
};

Node3.prototype.head = function () {
	throw new Error("trying to call head of Node3");
};

Node3.prototype.last = function () {
	throw new Error("trying to call last of Node3");
};

Node3.prototype.init = function () {
	throw new Error("trying to call init of Node3");
};

Node3.prototype.tail = function () {
	throw new Error("trying to call tail of Node3");
};

Node3.prototype.push = function (value) {
	throw new Error("trying to call push of Node3");
};

Node3.prototype.cons = function (value) {
	throw new Error("trying to call cons of Node3");
};

function node3(M, a, b, c) {
	return new Node3(M.plus(M.measure(a), M.plus(M.measure(b), M.measure(c))), a, b, c);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy8yLW5vZGUvMy1Ob2RlMy5qcyJdLCJuYW1lcyI6WyJOb2RlMyIsIm5vZGUzIiwidiIsImEiLCJiIiwiYyIsInByb3RvdHlwZSIsIlN5bWJvbCIsIml0ZXJhdG9yIiwibWVhc3VyZSIsImRpZ2l0IiwiaGVhZCIsIkVycm9yIiwibGFzdCIsImluaXQiLCJ0YWlsIiwicHVzaCIsInZhbHVlIiwiY29ucyIsIk0iLCJwbHVzIl0sIm1hcHBpbmdzIjoiOzs7OztRQUVnQkEsSyxHQUFBQSxLO1FBNENBQyxLLEdBQUFBLEs7O0FBOUNoQjs7QUFFTyxTQUFTRCxLQUFULENBQWlCRSxDQUFqQixFQUFxQkMsQ0FBckIsRUFBeUJDLENBQXpCLEVBQTZCQyxDQUE3QixFQUFpQztBQUN2QyxNQUFLSCxDQUFMLEdBQVNBLENBQVQ7QUFDQSxNQUFLQyxDQUFMLEdBQVNBLENBQVQ7QUFDQSxNQUFLQyxDQUFMLEdBQVNBLENBQVQ7QUFDQSxNQUFLQyxDQUFMLEdBQVNBLENBQVQ7QUFDQTs7QUFFREwsTUFBTU0sU0FBTixDQUFnQkMsT0FBT0MsUUFBdkIsSUFBbUMsWUFBYTtBQUMvQyxRQUFPLENBQUUsS0FBS0wsQ0FBUCxFQUFXLEtBQUtDLENBQWhCLEVBQW9CLEtBQUtDLENBQXpCLEVBQTZCRSxPQUFPQyxRQUFwQyxHQUFQO0FBQ0EsQ0FGRDs7QUFJQVIsTUFBTU0sU0FBTixDQUFnQkcsT0FBaEIsR0FBMEIsWUFBYTtBQUN0QyxRQUFPLEtBQUtQLENBQVo7QUFDQSxDQUZEOztBQUlBRixNQUFNTSxTQUFOLENBQWdCSSxLQUFoQixHQUF3QixZQUFhO0FBQ3BDLFFBQU8saUJBQVcsS0FBS1AsQ0FBaEIsRUFBb0IsS0FBS0MsQ0FBekIsRUFBNkIsS0FBS0MsQ0FBbEMsQ0FBUDtBQUNBLENBRkQ7O0FBSUFMLE1BQU1NLFNBQU4sQ0FBZ0JLLElBQWhCLEdBQXVCLFlBQWE7QUFDbkMsT0FBTSxJQUFJQyxLQUFKLENBQVcsOEJBQVgsQ0FBTjtBQUNBLENBRkQ7O0FBSUFaLE1BQU1NLFNBQU4sQ0FBZ0JPLElBQWhCLEdBQXVCLFlBQWE7QUFDbkMsT0FBTSxJQUFJRCxLQUFKLENBQVcsOEJBQVgsQ0FBTjtBQUNBLENBRkQ7O0FBSUFaLE1BQU1NLFNBQU4sQ0FBZ0JRLElBQWhCLEdBQXVCLFlBQWE7QUFDbkMsT0FBTSxJQUFJRixLQUFKLENBQVcsOEJBQVgsQ0FBTjtBQUNBLENBRkQ7O0FBSUFaLE1BQU1NLFNBQU4sQ0FBZ0JTLElBQWhCLEdBQXVCLFlBQWE7QUFDbkMsT0FBTSxJQUFJSCxLQUFKLENBQVcsOEJBQVgsQ0FBTjtBQUNBLENBRkQ7O0FBSUFaLE1BQU1NLFNBQU4sQ0FBZ0JVLElBQWhCLEdBQXVCLFVBQVdDLEtBQVgsRUFBbUI7QUFDekMsT0FBTSxJQUFJTCxLQUFKLENBQVcsOEJBQVgsQ0FBTjtBQUNBLENBRkQ7O0FBSUFaLE1BQU1NLFNBQU4sQ0FBZ0JZLElBQWhCLEdBQXVCLFVBQVdELEtBQVgsRUFBbUI7QUFDekMsT0FBTSxJQUFJTCxLQUFKLENBQVcsOEJBQVgsQ0FBTjtBQUNBLENBRkQ7O0FBS08sU0FBU1gsS0FBVCxDQUFpQmtCLENBQWpCLEVBQXFCaEIsQ0FBckIsRUFBeUJDLENBQXpCLEVBQTZCQyxDQUE3QixFQUFpQztBQUN2QyxRQUFPLElBQUlMLEtBQUosQ0FBV21CLEVBQUVDLElBQUYsQ0FBUUQsRUFBRVYsT0FBRixDQUFXTixDQUFYLENBQVIsRUFBeUJnQixFQUFFQyxJQUFGLENBQVFELEVBQUVWLE9BQUYsQ0FBV0wsQ0FBWCxDQUFSLEVBQXlCZSxFQUFFVixPQUFGLENBQVdKLENBQVgsQ0FBekIsQ0FBekIsQ0FBWCxFQUFrRkYsQ0FBbEYsRUFBc0ZDLENBQXRGLEVBQTBGQyxDQUExRixDQUFQO0FBQ0EiLCJmaWxlIjoiMy1Ob2RlMy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRocmVlIH0gZnJvbSAnLi4vMS1kaWdpdCcgO1xuXG5leHBvcnQgZnVuY3Rpb24gTm9kZTMgKCB2ICwgYSAsIGIgLCBjICkge1xuXHR0aGlzLnYgPSB2IDtcblx0dGhpcy5hID0gYSA7XG5cdHRoaXMuYiA9IGIgO1xuXHR0aGlzLmMgPSBjIDtcbn1cblxuTm9kZTMucHJvdG90eXBlW1N5bWJvbC5pdGVyYXRvcl0gPSBmdW5jdGlvbiAoICkge1xuXHRyZXR1cm4gWyB0aGlzLmEgLCB0aGlzLmIgLCB0aGlzLmMgXVtTeW1ib2wuaXRlcmF0b3JdKCApIDtcbn0gO1xuXG5Ob2RlMy5wcm90b3R5cGUubWVhc3VyZSA9IGZ1bmN0aW9uICggKSB7XG5cdHJldHVybiB0aGlzLnYgO1xufSA7XG5cbk5vZGUzLnByb3RvdHlwZS5kaWdpdCA9IGZ1bmN0aW9uICggKSB7XG5cdHJldHVybiBuZXcgVGhyZWUoIHRoaXMuYSAsIHRoaXMuYiAsIHRoaXMuYyApIDtcbn0gO1xuXG5Ob2RlMy5wcm90b3R5cGUuaGVhZCA9IGZ1bmN0aW9uICggKSB7XG5cdHRocm93IG5ldyBFcnJvciggXCJ0cnlpbmcgdG8gY2FsbCBoZWFkIG9mIE5vZGUzXCIgKSA7XG59IDtcblxuTm9kZTMucHJvdG90eXBlLmxhc3QgPSBmdW5jdGlvbiAoICkge1xuXHR0aHJvdyBuZXcgRXJyb3IoIFwidHJ5aW5nIHRvIGNhbGwgbGFzdCBvZiBOb2RlM1wiICkgO1xufSA7XG5cbk5vZGUzLnByb3RvdHlwZS5pbml0ID0gZnVuY3Rpb24gKCApIHtcblx0dGhyb3cgbmV3IEVycm9yKCBcInRyeWluZyB0byBjYWxsIGluaXQgb2YgTm9kZTNcIiApIDtcbn0gO1xuXG5Ob2RlMy5wcm90b3R5cGUudGFpbCA9IGZ1bmN0aW9uICggKSB7XG5cdHRocm93IG5ldyBFcnJvciggXCJ0cnlpbmcgdG8gY2FsbCB0YWlsIG9mIE5vZGUzXCIgKSA7XG59IDtcblxuTm9kZTMucHJvdG90eXBlLnB1c2ggPSBmdW5jdGlvbiAoIHZhbHVlICkge1xuXHR0aHJvdyBuZXcgRXJyb3IoIFwidHJ5aW5nIHRvIGNhbGwgcHVzaCBvZiBOb2RlM1wiICkgO1xufSA7XG5cbk5vZGUzLnByb3RvdHlwZS5jb25zID0gZnVuY3Rpb24gKCB2YWx1ZSApIHtcblx0dGhyb3cgbmV3IEVycm9yKCBcInRyeWluZyB0byBjYWxsIGNvbnMgb2YgTm9kZTNcIiApIDtcbn0gO1xuXG5cbmV4cG9ydCBmdW5jdGlvbiBub2RlMyAoIE0gLCBhICwgYiAsIGMgKSB7XG5cdHJldHVybiBuZXcgTm9kZTMoIE0ucGx1cyggTS5tZWFzdXJlKCBhICkgLCBNLnBsdXMoIE0ubWVhc3VyZSggYiApICwgTS5tZWFzdXJlKCBjICkgKSApICwgYSAsIGIgLCBjICkgO1xufVxuIl19