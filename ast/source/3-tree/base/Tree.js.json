{
  "type": "File",
  "start": 0,
  "end": 3198,
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 101,
      "column": 0
    }
  },
  "program": {
    "type": "Program",
    "start": 0,
    "end": 3198,
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 101,
        "column": 0
      }
    },
    "sourceType": "module",
    "body": [
      {
        "type": "ImportDeclaration",
        "start": 0,
        "end": 54,
        "loc": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 54
          }
        },
        "specifiers": [
          {
            "type": "ImportSpecifier",
            "start": 8,
            "end": 14,
            "loc": {
              "start": {
                "line": 1,
                "column": 8
              },
              "end": {
                "line": 1,
                "column": 14
              }
            },
            "imported": {
              "type": "Identifier",
              "start": 8,
              "end": 14,
              "loc": {
                "start": {
                  "line": 1,
                  "column": 8
                },
                "end": {
                  "line": 1,
                  "column": 14
                },
                "identifierName": "append"
              },
              "name": "append"
            },
            "local": {
              "type": "Identifier",
              "start": 8,
              "end": 14,
              "loc": {
                "start": {
                  "line": 1,
                  "column": 8
                },
                "end": {
                  "line": 1,
                  "column": 14
                },
                "identifierName": "append"
              },
              "name": "append"
            }
          },
          {
            "type": "ImportSpecifier",
            "start": 16,
            "end": 23,
            "loc": {
              "start": {
                "line": 1,
                "column": 16
              },
              "end": {
                "line": 1,
                "column": 23
              }
            },
            "imported": {
              "type": "Identifier",
              "start": 16,
              "end": 23,
              "loc": {
                "start": {
                  "line": 1,
                  "column": 16
                },
                "end": {
                  "line": 1,
                  "column": 23
                },
                "identifierName": "prepend"
              },
              "name": "prepend"
            },
            "local": {
              "type": "Identifier",
              "start": 16,
              "end": 23,
              "loc": {
                "start": {
                  "line": 1,
                  "column": 16
                },
                "end": {
                  "line": 1,
                  "column": 23
                },
                "identifierName": "prepend"
              },
              "name": "prepend"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "start": 30,
          "end": 53,
          "loc": {
            "start": {
              "line": 1,
              "column": 30
            },
            "end": {
              "line": 1,
              "column": 53
            }
          },
          "extra": {
            "rawValue": "../../0-core/index.js",
            "raw": "'../../0-core/index.js'"
          },
          "value": "../../0-core/index.js"
        },
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Base class for all implementations.\n ",
            "start": 56,
            "end": 102,
            "loc": {
              "start": {
                "line": 3,
                "column": 0
              },
              "end": {
                "line": 5,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 103,
        "end": 128,
        "loc": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 25
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "FunctionDeclaration",
          "start": 110,
          "end": 128,
          "loc": {
            "start": {
              "line": 6,
              "column": 7
            },
            "end": {
              "line": 6,
              "column": 25
            }
          },
          "id": {
            "type": "Identifier",
            "start": 119,
            "end": 123,
            "loc": {
              "start": {
                "line": 6,
                "column": 16
              },
              "end": {
                "line": 6,
                "column": 20
              },
              "identifierName": "Tree"
            },
            "name": "Tree",
            "leadingComments": null
          },
          "generator": false,
          "expression": false,
          "async": false,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "start": 126,
            "end": 128,
            "loc": {
              "start": {
                "line": 6,
                "column": 23
              },
              "end": {
                "line": 6,
                "column": 25
              }
            },
            "body": [],
            "directives": [],
            "leadingComments": null,
            "trailingComments": null
          },
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Base class for all implementations.\n ",
              "start": 56,
              "end": 102,
              "loc": {
                "start": {
                  "line": 3,
                  "column": 0
                },
                "end": {
                  "line": 5,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * For performance purposes, some of the operations are implemented lazily.\n * This method will force the (shallow) evaluation of this tree. This is an\n * implementation detail and need not be used by the user directly.\n *\n * @returns {Tree} The shallow evaluated tree.\n ",
              "start": 130,
              "end": 407,
              "loc": {
                "start": {
                  "line": 8,
                  "column": 0
                },
                "end": {
                  "line": 14,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Base class for all implementations.\n ",
            "start": 56,
            "end": 102,
            "loc": {
              "start": {
                "line": 3,
                "column": 0
              },
              "end": {
                "line": 5,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * For performance purposes, some of the operations are implemented lazily.\n * This method will force the (shallow) evaluation of this tree. This is an\n * implementation detail and need not be used by the user directly.\n *\n * @returns {Tree} The shallow evaluated tree.\n ",
            "start": 130,
            "end": 407,
            "loc": {
              "start": {
                "line": 8,
                "column": 0
              },
              "end": {
                "line": 14,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExpressionStatement",
        "start": 408,
        "end": 461,
        "loc": {
          "start": {
            "line": 15,
            "column": 0
          },
          "end": {
            "line": 17,
            "column": 2
          }
        },
        "expression": {
          "type": "AssignmentExpression",
          "start": 408,
          "end": 460,
          "loc": {
            "start": {
              "line": 15,
              "column": 0
            },
            "end": {
              "line": 17,
              "column": 1
            }
          },
          "operator": "=",
          "left": {
            "type": "MemberExpression",
            "start": 408,
            "end": 428,
            "loc": {
              "start": {
                "line": 15,
                "column": 0
              },
              "end": {
                "line": 15,
                "column": 20
              }
            },
            "object": {
              "type": "MemberExpression",
              "start": 408,
              "end": 422,
              "loc": {
                "start": {
                  "line": 15,
                  "column": 0
                },
                "end": {
                  "line": 15,
                  "column": 14
                }
              },
              "object": {
                "type": "Identifier",
                "start": 408,
                "end": 412,
                "loc": {
                  "start": {
                    "line": 15,
                    "column": 0
                  },
                  "end": {
                    "line": 15,
                    "column": 4
                  },
                  "identifierName": "Tree"
                },
                "name": "Tree",
                "leadingComments": null
              },
              "property": {
                "type": "Identifier",
                "start": 413,
                "end": 422,
                "loc": {
                  "start": {
                    "line": 15,
                    "column": 5
                  },
                  "end": {
                    "line": 15,
                    "column": 14
                  },
                  "identifierName": "prototype"
                },
                "name": "prototype"
              },
              "computed": false,
              "leadingComments": null
            },
            "property": {
              "type": "Identifier",
              "start": 423,
              "end": 428,
              "loc": {
                "start": {
                  "line": 15,
                  "column": 15
                },
                "end": {
                  "line": 15,
                  "column": 20
                },
                "identifierName": "force"
              },
              "name": "force"
            },
            "computed": false,
            "leadingComments": null
          },
          "right": {
            "type": "FunctionExpression",
            "start": 431,
            "end": 460,
            "loc": {
              "start": {
                "line": 15,
                "column": 23
              },
              "end": {
                "line": 17,
                "column": 1
              }
            },
            "id": {
              "type": "Identifier",
              "start": 423,
              "end": 428,
              "loc": {
                "start": {
                  "line": 15,
                  "column": 15
                },
                "end": {
                  "line": 15,
                  "column": 20
                },
                "identifierName": "force"
              },
              "name": "force"
            },
            "generator": false,
            "expression": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 443,
              "end": 460,
              "loc": {
                "start": {
                  "line": 15,
                  "column": 35
                },
                "end": {
                  "line": 17,
                  "column": 1
                }
              },
              "body": [
                {
                  "type": "ReturnStatement",
                  "start": 446,
                  "end": 458,
                  "loc": {
                    "start": {
                      "line": 16,
                      "column": 1
                    },
                    "end": {
                      "line": 16,
                      "column": 13
                    }
                  },
                  "argument": {
                    "type": "ThisExpression",
                    "start": 453,
                    "end": 457,
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 8
                      },
                      "end": {
                        "line": 16,
                        "column": 12
                      }
                    }
                  }
                }
              ],
              "directives": []
            }
          },
          "leadingComments": null
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * For performance purposes, some of the operations are implemented lazily.\n * This method will force the (shallow) evaluation of this tree. This is an\n * implementation detail and need not be used by the user directly.\n *\n * @returns {Tree} The shallow evaluated tree.\n ",
            "start": 130,
            "end": 407,
            "loc": {
              "start": {
                "line": 8,
                "column": 0
              },
              "end": {
                "line": 14,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Returns a tree that contains a prefix of this tree's values left-to-right list.\n * The prefix is defined by containing all values for which the\n * input predicate evaluates to `false` on the measure\n * of the prefix ending with that value. The input predicate must be monotone\n * (`false` then `true`).\n *\n * @example\n * // returns 'ab'\n * import { from } from '@functional-data-structure/finger-tree' ;\n * import { Measures : { SIZE } } from '@functional-abstraction/measure' ;\n * let tree = from( SIZE , 'abc' ) ;\n * tree = tree.takeUntil( measure => measure > 2 ) ;\n * [ ...tree ].join('') ;\n *\n * @param {Function} predicate The input measure predicate (monotone).\n *\n * @returns {Tree} The output tree.\n ",
            "start": 463,
            "end": 1181,
            "loc": {
              "start": {
                "line": 19,
                "column": 0
              },
              "end": {
                "line": 37,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExpressionStatement",
        "start": 1182,
        "end": 1268,
        "loc": {
          "start": {
            "line": 38,
            "column": 0
          },
          "end": {
            "line": 40,
            "column": 2
          }
        },
        "expression": {
          "type": "AssignmentExpression",
          "start": 1182,
          "end": 1267,
          "loc": {
            "start": {
              "line": 38,
              "column": 0
            },
            "end": {
              "line": 40,
              "column": 1
            }
          },
          "operator": "=",
          "left": {
            "type": "MemberExpression",
            "start": 1182,
            "end": 1206,
            "loc": {
              "start": {
                "line": 38,
                "column": 0
              },
              "end": {
                "line": 38,
                "column": 24
              }
            },
            "object": {
              "type": "MemberExpression",
              "start": 1182,
              "end": 1196,
              "loc": {
                "start": {
                  "line": 38,
                  "column": 0
                },
                "end": {
                  "line": 38,
                  "column": 14
                }
              },
              "object": {
                "type": "Identifier",
                "start": 1182,
                "end": 1186,
                "loc": {
                  "start": {
                    "line": 38,
                    "column": 0
                  },
                  "end": {
                    "line": 38,
                    "column": 4
                  },
                  "identifierName": "Tree"
                },
                "name": "Tree",
                "leadingComments": null
              },
              "property": {
                "type": "Identifier",
                "start": 1187,
                "end": 1196,
                "loc": {
                  "start": {
                    "line": 38,
                    "column": 5
                  },
                  "end": {
                    "line": 38,
                    "column": 14
                  },
                  "identifierName": "prototype"
                },
                "name": "prototype"
              },
              "computed": false,
              "leadingComments": null
            },
            "property": {
              "type": "Identifier",
              "start": 1197,
              "end": 1206,
              "loc": {
                "start": {
                  "line": 38,
                  "column": 15
                },
                "end": {
                  "line": 38,
                  "column": 24
                },
                "identifierName": "takeUntil"
              },
              "name": "takeUntil"
            },
            "computed": false,
            "leadingComments": null
          },
          "right": {
            "type": "FunctionExpression",
            "start": 1209,
            "end": 1267,
            "loc": {
              "start": {
                "line": 38,
                "column": 27
              },
              "end": {
                "line": 40,
                "column": 1
              }
            },
            "id": {
              "type": "Identifier",
              "start": 1197,
              "end": 1206,
              "loc": {
                "start": {
                  "line": 38,
                  "column": 15
                },
                "end": {
                  "line": 38,
                  "column": 24
                },
                "identifierName": "takeUntil"
              },
              "name": "takeUntil"
            },
            "generator": false,
            "expression": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "start": 1219,
                "end": 1228,
                "loc": {
                  "start": {
                    "line": 38,
                    "column": 37
                  },
                  "end": {
                    "line": 38,
                    "column": 46
                  },
                  "identifierName": "predicate"
                },
                "name": "predicate"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "start": 1230,
              "end": 1267,
              "loc": {
                "start": {
                  "line": 38,
                  "column": 48
                },
                "end": {
                  "line": 40,
                  "column": 1
                }
              },
              "body": [
                {
                  "type": "ReturnStatement",
                  "start": 1233,
                  "end": 1265,
                  "loc": {
                    "start": {
                      "line": 39,
                      "column": 1
                    },
                    "end": {
                      "line": 39,
                      "column": 33
                    }
                  },
                  "argument": {
                    "type": "MemberExpression",
                    "start": 1240,
                    "end": 1264,
                    "loc": {
                      "start": {
                        "line": 39,
                        "column": 8
                      },
                      "end": {
                        "line": 39,
                        "column": 32
                      }
                    },
                    "object": {
                      "type": "CallExpression",
                      "start": 1240,
                      "end": 1261,
                      "loc": {
                        "start": {
                          "line": 39,
                          "column": 8
                        },
                        "end": {
                          "line": 39,
                          "column": 29
                        }
                      },
                      "callee": {
                        "type": "MemberExpression",
                        "start": 1240,
                        "end": 1250,
                        "loc": {
                          "start": {
                            "line": 39,
                            "column": 8
                          },
                          "end": {
                            "line": 39,
                            "column": 18
                          }
                        },
                        "object": {
                          "type": "ThisExpression",
                          "start": 1240,
                          "end": 1244,
                          "loc": {
                            "start": {
                              "line": 39,
                              "column": 8
                            },
                            "end": {
                              "line": 39,
                              "column": 12
                            }
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 1245,
                          "end": 1250,
                          "loc": {
                            "start": {
                              "line": 39,
                              "column": 13
                            },
                            "end": {
                              "line": 39,
                              "column": 18
                            },
                            "identifierName": "split"
                          },
                          "name": "split"
                        },
                        "computed": false
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "start": 1251,
                          "end": 1260,
                          "loc": {
                            "start": {
                              "line": 39,
                              "column": 19
                            },
                            "end": {
                              "line": 39,
                              "column": 28
                            },
                            "identifierName": "predicate"
                          },
                          "name": "predicate"
                        }
                      ]
                    },
                    "property": {
                      "type": "NumericLiteral",
                      "start": 1262,
                      "end": 1263,
                      "loc": {
                        "start": {
                          "line": 39,
                          "column": 30
                        },
                        "end": {
                          "line": 39,
                          "column": 31
                        }
                      },
                      "extra": {
                        "rawValue": 0,
                        "raw": "0"
                      },
                      "value": 0
                    },
                    "computed": true
                  }
                }
              ],
              "directives": []
            }
          },
          "leadingComments": null
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Returns a tree that contains a prefix of this tree's values left-to-right list.\n * The prefix is defined by containing all values for which the\n * input predicate evaluates to `false` on the measure\n * of the prefix ending with that value. The input predicate must be monotone\n * (`false` then `true`).\n *\n * @example\n * // returns 'ab'\n * import { from } from '@functional-data-structure/finger-tree' ;\n * import { Measures : { SIZE } } from '@functional-abstraction/measure' ;\n * let tree = from( SIZE , 'abc' ) ;\n * tree = tree.takeUntil( measure => measure > 2 ) ;\n * [ ...tree ].join('') ;\n *\n * @param {Function} predicate The input measure predicate (monotone).\n *\n * @returns {Tree} The output tree.\n ",
            "start": 463,
            "end": 1181,
            "loc": {
              "start": {
                "line": 19,
                "column": 0
              },
              "end": {
                "line": 37,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Returns a tree that contains a suffix of this tree's values left-to-right\n * list. The suffix is defined by containing all values for which the input\n * predicate evaluates to `true` on the measure of the prefix ending with that\n * value. The input predicate must be monotone (`false` then `true`).\n *\n * @example\n * // returns 'c'\n * import { from } from '@functional-data-structure/finger-tree' ;\n * import { Measures : { SIZE } } from '@functional-abstraction/measure' ;\n * let tree = from( SIZE , 'abc' ) ;\n * tree = tree.dropUntil( measure => measure > 2 ) ;\n * [ ...tree ].join('') ;\n *\n * @param {Function} predicate The input measure predicate (monotone).\n *\n * @returns {Tree} The output tree.\n ",
            "start": 1270,
            "end": 1983,
            "loc": {
              "start": {
                "line": 42,
                "column": 0
              },
              "end": {
                "line": 59,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExpressionStatement",
        "start": 1984,
        "end": 2070,
        "loc": {
          "start": {
            "line": 60,
            "column": 0
          },
          "end": {
            "line": 62,
            "column": 2
          }
        },
        "expression": {
          "type": "AssignmentExpression",
          "start": 1984,
          "end": 2069,
          "loc": {
            "start": {
              "line": 60,
              "column": 0
            },
            "end": {
              "line": 62,
              "column": 1
            }
          },
          "operator": "=",
          "left": {
            "type": "MemberExpression",
            "start": 1984,
            "end": 2008,
            "loc": {
              "start": {
                "line": 60,
                "column": 0
              },
              "end": {
                "line": 60,
                "column": 24
              }
            },
            "object": {
              "type": "MemberExpression",
              "start": 1984,
              "end": 1998,
              "loc": {
                "start": {
                  "line": 60,
                  "column": 0
                },
                "end": {
                  "line": 60,
                  "column": 14
                }
              },
              "object": {
                "type": "Identifier",
                "start": 1984,
                "end": 1988,
                "loc": {
                  "start": {
                    "line": 60,
                    "column": 0
                  },
                  "end": {
                    "line": 60,
                    "column": 4
                  },
                  "identifierName": "Tree"
                },
                "name": "Tree",
                "leadingComments": null
              },
              "property": {
                "type": "Identifier",
                "start": 1989,
                "end": 1998,
                "loc": {
                  "start": {
                    "line": 60,
                    "column": 5
                  },
                  "end": {
                    "line": 60,
                    "column": 14
                  },
                  "identifierName": "prototype"
                },
                "name": "prototype"
              },
              "computed": false,
              "leadingComments": null
            },
            "property": {
              "type": "Identifier",
              "start": 1999,
              "end": 2008,
              "loc": {
                "start": {
                  "line": 60,
                  "column": 15
                },
                "end": {
                  "line": 60,
                  "column": 24
                },
                "identifierName": "dropUntil"
              },
              "name": "dropUntil"
            },
            "computed": false,
            "leadingComments": null
          },
          "right": {
            "type": "FunctionExpression",
            "start": 2011,
            "end": 2069,
            "loc": {
              "start": {
                "line": 60,
                "column": 27
              },
              "end": {
                "line": 62,
                "column": 1
              }
            },
            "id": {
              "type": "Identifier",
              "start": 1999,
              "end": 2008,
              "loc": {
                "start": {
                  "line": 60,
                  "column": 15
                },
                "end": {
                  "line": 60,
                  "column": 24
                },
                "identifierName": "dropUntil"
              },
              "name": "dropUntil"
            },
            "generator": false,
            "expression": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "start": 2021,
                "end": 2030,
                "loc": {
                  "start": {
                    "line": 60,
                    "column": 37
                  },
                  "end": {
                    "line": 60,
                    "column": 46
                  },
                  "identifierName": "predicate"
                },
                "name": "predicate"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "start": 2032,
              "end": 2069,
              "loc": {
                "start": {
                  "line": 60,
                  "column": 48
                },
                "end": {
                  "line": 62,
                  "column": 1
                }
              },
              "body": [
                {
                  "type": "ReturnStatement",
                  "start": 2035,
                  "end": 2067,
                  "loc": {
                    "start": {
                      "line": 61,
                      "column": 1
                    },
                    "end": {
                      "line": 61,
                      "column": 33
                    }
                  },
                  "argument": {
                    "type": "MemberExpression",
                    "start": 2042,
                    "end": 2066,
                    "loc": {
                      "start": {
                        "line": 61,
                        "column": 8
                      },
                      "end": {
                        "line": 61,
                        "column": 32
                      }
                    },
                    "object": {
                      "type": "CallExpression",
                      "start": 2042,
                      "end": 2063,
                      "loc": {
                        "start": {
                          "line": 61,
                          "column": 8
                        },
                        "end": {
                          "line": 61,
                          "column": 29
                        }
                      },
                      "callee": {
                        "type": "MemberExpression",
                        "start": 2042,
                        "end": 2052,
                        "loc": {
                          "start": {
                            "line": 61,
                            "column": 8
                          },
                          "end": {
                            "line": 61,
                            "column": 18
                          }
                        },
                        "object": {
                          "type": "ThisExpression",
                          "start": 2042,
                          "end": 2046,
                          "loc": {
                            "start": {
                              "line": 61,
                              "column": 8
                            },
                            "end": {
                              "line": 61,
                              "column": 12
                            }
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 2047,
                          "end": 2052,
                          "loc": {
                            "start": {
                              "line": 61,
                              "column": 13
                            },
                            "end": {
                              "line": 61,
                              "column": 18
                            },
                            "identifierName": "split"
                          },
                          "name": "split"
                        },
                        "computed": false
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "start": 2053,
                          "end": 2062,
                          "loc": {
                            "start": {
                              "line": 61,
                              "column": 19
                            },
                            "end": {
                              "line": 61,
                              "column": 28
                            },
                            "identifierName": "predicate"
                          },
                          "name": "predicate"
                        }
                      ]
                    },
                    "property": {
                      "type": "NumericLiteral",
                      "start": 2064,
                      "end": 2065,
                      "loc": {
                        "start": {
                          "line": 61,
                          "column": 30
                        },
                        "end": {
                          "line": 61,
                          "column": 31
                        }
                      },
                      "extra": {
                        "rawValue": 1,
                        "raw": "1"
                      },
                      "value": 1
                    },
                    "computed": true
                  }
                }
              ],
              "directives": []
            }
          },
          "leadingComments": null
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Returns a tree that contains a suffix of this tree's values left-to-right\n * list. The suffix is defined by containing all values for which the input\n * predicate evaluates to `true` on the measure of the prefix ending with that\n * value. The input predicate must be monotone (`false` then `true`).\n *\n * @example\n * // returns 'c'\n * import { from } from '@functional-data-structure/finger-tree' ;\n * import { Measures : { SIZE } } from '@functional-abstraction/measure' ;\n * let tree = from( SIZE , 'abc' ) ;\n * tree = tree.dropUntil( measure => measure > 2 ) ;\n * [ ...tree ].join('') ;\n *\n * @param {Function} predicate The input measure predicate (monotone).\n *\n * @returns {Tree} The output tree.\n ",
            "start": 1270,
            "end": 1983,
            "loc": {
              "start": {
                "line": 42,
                "column": 0
              },
              "end": {
                "line": 59,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Returns a tree that contains all values of this tree in-order followed by\n * all values of the input iterable in-order.\n *\n * @example\n * // returns 'abc123'\n * import { from } from '@functional-data-structure/finger-tree' ;\n * import { Measures : { SIZE } } from '@functional-abstraction/measure' ;\n * let tree = from( SIZE , 'abc' ).append('123') ;\n * [ ...tree ].join('') ;\n *\n * @param {Iterable} iterable The input iterable.\n *\n * @returns {Tree} The output tree.\n ",
            "start": 2072,
            "end": 2551,
            "loc": {
              "start": {
                "line": 64,
                "column": 0
              },
              "end": {
                "line": 78,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExpressionStatement",
        "start": 2552,
        "end": 2632,
        "loc": {
          "start": {
            "line": 79,
            "column": 0
          },
          "end": {
            "line": 81,
            "column": 2
          }
        },
        "expression": {
          "type": "AssignmentExpression",
          "start": 2552,
          "end": 2631,
          "loc": {
            "start": {
              "line": 79,
              "column": 0
            },
            "end": {
              "line": 81,
              "column": 1
            }
          },
          "operator": "=",
          "left": {
            "type": "MemberExpression",
            "start": 2552,
            "end": 2573,
            "loc": {
              "start": {
                "line": 79,
                "column": 0
              },
              "end": {
                "line": 79,
                "column": 21
              }
            },
            "object": {
              "type": "MemberExpression",
              "start": 2552,
              "end": 2566,
              "loc": {
                "start": {
                  "line": 79,
                  "column": 0
                },
                "end": {
                  "line": 79,
                  "column": 14
                }
              },
              "object": {
                "type": "Identifier",
                "start": 2552,
                "end": 2556,
                "loc": {
                  "start": {
                    "line": 79,
                    "column": 0
                  },
                  "end": {
                    "line": 79,
                    "column": 4
                  },
                  "identifierName": "Tree"
                },
                "name": "Tree",
                "leadingComments": null
              },
              "property": {
                "type": "Identifier",
                "start": 2557,
                "end": 2566,
                "loc": {
                  "start": {
                    "line": 79,
                    "column": 5
                  },
                  "end": {
                    "line": 79,
                    "column": 14
                  },
                  "identifierName": "prototype"
                },
                "name": "prototype"
              },
              "computed": false,
              "leadingComments": null
            },
            "property": {
              "type": "Identifier",
              "start": 2567,
              "end": 2573,
              "loc": {
                "start": {
                  "line": 79,
                  "column": 15
                },
                "end": {
                  "line": 79,
                  "column": 21
                },
                "identifierName": "append"
              },
              "name": "append"
            },
            "computed": false,
            "leadingComments": null
          },
          "right": {
            "type": "FunctionExpression",
            "start": 2576,
            "end": 2631,
            "loc": {
              "start": {
                "line": 79,
                "column": 24
              },
              "end": {
                "line": 81,
                "column": 1
              }
            },
            "id": {
              "type": "Identifier",
              "start": 2567,
              "end": 2573,
              "loc": {
                "start": {
                  "line": 79,
                  "column": 15
                },
                "end": {
                  "line": 79,
                  "column": 21
                },
                "identifierName": "append"
              },
              "name": "append"
            },
            "generator": false,
            "expression": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "start": 2586,
                "end": 2594,
                "loc": {
                  "start": {
                    "line": 79,
                    "column": 34
                  },
                  "end": {
                    "line": 79,
                    "column": 42
                  },
                  "identifierName": "iterable"
                },
                "name": "iterable"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "start": 2596,
              "end": 2631,
              "loc": {
                "start": {
                  "line": 79,
                  "column": 44
                },
                "end": {
                  "line": 81,
                  "column": 1
                }
              },
              "body": [
                {
                  "type": "ReturnStatement",
                  "start": 2599,
                  "end": 2629,
                  "loc": {
                    "start": {
                      "line": 80,
                      "column": 1
                    },
                    "end": {
                      "line": 80,
                      "column": 31
                    }
                  },
                  "argument": {
                    "type": "CallExpression",
                    "start": 2606,
                    "end": 2628,
                    "loc": {
                      "start": {
                        "line": 80,
                        "column": 8
                      },
                      "end": {
                        "line": 80,
                        "column": 30
                      }
                    },
                    "callee": {
                      "type": "Identifier",
                      "start": 2606,
                      "end": 2612,
                      "loc": {
                        "start": {
                          "line": 80,
                          "column": 8
                        },
                        "end": {
                          "line": 80,
                          "column": 14
                        },
                        "identifierName": "append"
                      },
                      "name": "append"
                    },
                    "arguments": [
                      {
                        "type": "ThisExpression",
                        "start": 2613,
                        "end": 2617,
                        "loc": {
                          "start": {
                            "line": 80,
                            "column": 15
                          },
                          "end": {
                            "line": 80,
                            "column": 19
                          }
                        }
                      },
                      {
                        "type": "Identifier",
                        "start": 2619,
                        "end": 2627,
                        "loc": {
                          "start": {
                            "line": 80,
                            "column": 21
                          },
                          "end": {
                            "line": 80,
                            "column": 29
                          },
                          "identifierName": "iterable"
                        },
                        "name": "iterable"
                      }
                    ]
                  }
                }
              ],
              "directives": []
            }
          },
          "leadingComments": null
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Returns a tree that contains all values of this tree in-order followed by\n * all values of the input iterable in-order.\n *\n * @example\n * // returns 'abc123'\n * import { from } from '@functional-data-structure/finger-tree' ;\n * import { Measures : { SIZE } } from '@functional-abstraction/measure' ;\n * let tree = from( SIZE , 'abc' ).append('123') ;\n * [ ...tree ].join('') ;\n *\n * @param {Iterable} iterable The input iterable.\n *\n * @returns {Tree} The output tree.\n ",
            "start": 2072,
            "end": 2551,
            "loc": {
              "start": {
                "line": 64,
                "column": 0
              },
              "end": {
                "line": 78,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Returns a tree that contains all values of the input iterable in-order\n * followed by all values of this tree in-order.\n *\n * @example\n * // returns '123abc'\n * import { from } from '@functional-data-structure/finger-tree' ;\n * import { Measures : { SIZE } } from '@functional-abstraction/measure' ;\n * let tree = from( SIZE , 'abc' ).prepend('123') ;\n * [ ...tree ].join('') ;\n *\n * @param {Iterable} iterable The input iterable.\n *\n * @returns {Tree} The output tree.\n ",
            "start": 2634,
            "end": 3114,
            "loc": {
              "start": {
                "line": 83,
                "column": 0
              },
              "end": {
                "line": 97,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExpressionStatement",
        "start": 3115,
        "end": 3197,
        "loc": {
          "start": {
            "line": 98,
            "column": 0
          },
          "end": {
            "line": 100,
            "column": 2
          }
        },
        "expression": {
          "type": "AssignmentExpression",
          "start": 3115,
          "end": 3196,
          "loc": {
            "start": {
              "line": 98,
              "column": 0
            },
            "end": {
              "line": 100,
              "column": 1
            }
          },
          "operator": "=",
          "left": {
            "type": "MemberExpression",
            "start": 3115,
            "end": 3137,
            "loc": {
              "start": {
                "line": 98,
                "column": 0
              },
              "end": {
                "line": 98,
                "column": 22
              }
            },
            "object": {
              "type": "MemberExpression",
              "start": 3115,
              "end": 3129,
              "loc": {
                "start": {
                  "line": 98,
                  "column": 0
                },
                "end": {
                  "line": 98,
                  "column": 14
                }
              },
              "object": {
                "type": "Identifier",
                "start": 3115,
                "end": 3119,
                "loc": {
                  "start": {
                    "line": 98,
                    "column": 0
                  },
                  "end": {
                    "line": 98,
                    "column": 4
                  },
                  "identifierName": "Tree"
                },
                "name": "Tree",
                "leadingComments": null
              },
              "property": {
                "type": "Identifier",
                "start": 3120,
                "end": 3129,
                "loc": {
                  "start": {
                    "line": 98,
                    "column": 5
                  },
                  "end": {
                    "line": 98,
                    "column": 14
                  },
                  "identifierName": "prototype"
                },
                "name": "prototype"
              },
              "computed": false,
              "leadingComments": null
            },
            "property": {
              "type": "Identifier",
              "start": 3130,
              "end": 3137,
              "loc": {
                "start": {
                  "line": 98,
                  "column": 15
                },
                "end": {
                  "line": 98,
                  "column": 22
                },
                "identifierName": "prepend"
              },
              "name": "prepend"
            },
            "computed": false,
            "leadingComments": null
          },
          "right": {
            "type": "FunctionExpression",
            "start": 3140,
            "end": 3196,
            "loc": {
              "start": {
                "line": 98,
                "column": 25
              },
              "end": {
                "line": 100,
                "column": 1
              }
            },
            "id": {
              "type": "Identifier",
              "start": 3130,
              "end": 3137,
              "loc": {
                "start": {
                  "line": 98,
                  "column": 15
                },
                "end": {
                  "line": 98,
                  "column": 22
                },
                "identifierName": "prepend"
              },
              "name": "prepend"
            },
            "generator": false,
            "expression": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "start": 3150,
                "end": 3158,
                "loc": {
                  "start": {
                    "line": 98,
                    "column": 35
                  },
                  "end": {
                    "line": 98,
                    "column": 43
                  },
                  "identifierName": "iterable"
                },
                "name": "iterable"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "start": 3160,
              "end": 3196,
              "loc": {
                "start": {
                  "line": 98,
                  "column": 45
                },
                "end": {
                  "line": 100,
                  "column": 1
                }
              },
              "body": [
                {
                  "type": "ReturnStatement",
                  "start": 3163,
                  "end": 3194,
                  "loc": {
                    "start": {
                      "line": 99,
                      "column": 1
                    },
                    "end": {
                      "line": 99,
                      "column": 32
                    }
                  },
                  "argument": {
                    "type": "CallExpression",
                    "start": 3170,
                    "end": 3193,
                    "loc": {
                      "start": {
                        "line": 99,
                        "column": 8
                      },
                      "end": {
                        "line": 99,
                        "column": 31
                      }
                    },
                    "callee": {
                      "type": "Identifier",
                      "start": 3170,
                      "end": 3177,
                      "loc": {
                        "start": {
                          "line": 99,
                          "column": 8
                        },
                        "end": {
                          "line": 99,
                          "column": 15
                        },
                        "identifierName": "prepend"
                      },
                      "name": "prepend"
                    },
                    "arguments": [
                      {
                        "type": "ThisExpression",
                        "start": 3178,
                        "end": 3182,
                        "loc": {
                          "start": {
                            "line": 99,
                            "column": 16
                          },
                          "end": {
                            "line": 99,
                            "column": 20
                          }
                        }
                      },
                      {
                        "type": "Identifier",
                        "start": 3184,
                        "end": 3192,
                        "loc": {
                          "start": {
                            "line": 99,
                            "column": 22
                          },
                          "end": {
                            "line": 99,
                            "column": 30
                          },
                          "identifierName": "iterable"
                        },
                        "name": "iterable"
                      }
                    ]
                  }
                }
              ],
              "directives": []
            }
          },
          "leadingComments": null
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Returns a tree that contains all values of the input iterable in-order\n * followed by all values of this tree in-order.\n *\n * @example\n * // returns '123abc'\n * import { from } from '@functional-data-structure/finger-tree' ;\n * import { Measures : { SIZE } } from '@functional-abstraction/measure' ;\n * let tree = from( SIZE , 'abc' ).prepend('123') ;\n * [ ...tree ].join('') ;\n *\n * @param {Iterable} iterable The input iterable.\n *\n * @returns {Tree} The output tree.\n ",
            "start": 2634,
            "end": 3114,
            "loc": {
              "start": {
                "line": 83,
                "column": 0
              },
              "end": {
                "line": 97,
                "column": 3
              }
            }
          }
        ]
      }
    ],
    "directives": []
  },
  "comments": [
    {
      "type": "CommentBlock",
      "value": "*\n * Base class for all implementations.\n ",
      "start": 56,
      "end": 102,
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 5,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * For performance purposes, some of the operations are implemented lazily.\n * This method will force the (shallow) evaluation of this tree. This is an\n * implementation detail and need not be used by the user directly.\n *\n * @returns {Tree} The shallow evaluated tree.\n ",
      "start": 130,
      "end": 407,
      "loc": {
        "start": {
          "line": 8,
          "column": 0
        },
        "end": {
          "line": 14,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Returns a tree that contains a prefix of this tree's values left-to-right list.\n * The prefix is defined by containing all values for which the\n * input predicate evaluates to `false` on the measure\n * of the prefix ending with that value. The input predicate must be monotone\n * (`false` then `true`).\n *\n * @example\n * // returns 'ab'\n * import { from } from '@functional-data-structure/finger-tree' ;\n * import { Measures : { SIZE } } from '@functional-abstraction/measure' ;\n * let tree = from( SIZE , 'abc' ) ;\n * tree = tree.takeUntil( measure => measure > 2 ) ;\n * [ ...tree ].join('') ;\n *\n * @param {Function} predicate The input measure predicate (monotone).\n *\n * @returns {Tree} The output tree.\n ",
      "start": 463,
      "end": 1181,
      "loc": {
        "start": {
          "line": 19,
          "column": 0
        },
        "end": {
          "line": 37,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Returns a tree that contains a suffix of this tree's values left-to-right\n * list. The suffix is defined by containing all values for which the input\n * predicate evaluates to `true` on the measure of the prefix ending with that\n * value. The input predicate must be monotone (`false` then `true`).\n *\n * @example\n * // returns 'c'\n * import { from } from '@functional-data-structure/finger-tree' ;\n * import { Measures : { SIZE } } from '@functional-abstraction/measure' ;\n * let tree = from( SIZE , 'abc' ) ;\n * tree = tree.dropUntil( measure => measure > 2 ) ;\n * [ ...tree ].join('') ;\n *\n * @param {Function} predicate The input measure predicate (monotone).\n *\n * @returns {Tree} The output tree.\n ",
      "start": 1270,
      "end": 1983,
      "loc": {
        "start": {
          "line": 42,
          "column": 0
        },
        "end": {
          "line": 59,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Returns a tree that contains all values of this tree in-order followed by\n * all values of the input iterable in-order.\n *\n * @example\n * // returns 'abc123'\n * import { from } from '@functional-data-structure/finger-tree' ;\n * import { Measures : { SIZE } } from '@functional-abstraction/measure' ;\n * let tree = from( SIZE , 'abc' ).append('123') ;\n * [ ...tree ].join('') ;\n *\n * @param {Iterable} iterable The input iterable.\n *\n * @returns {Tree} The output tree.\n ",
      "start": 2072,
      "end": 2551,
      "loc": {
        "start": {
          "line": 64,
          "column": 0
        },
        "end": {
          "line": 78,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Returns a tree that contains all values of the input iterable in-order\n * followed by all values of this tree in-order.\n *\n * @example\n * // returns '123abc'\n * import { from } from '@functional-data-structure/finger-tree' ;\n * import { Measures : { SIZE } } from '@functional-abstraction/measure' ;\n * let tree = from( SIZE , 'abc' ).prepend('123') ;\n * [ ...tree ].join('') ;\n *\n * @param {Iterable} iterable The input iterable.\n *\n * @returns {Tree} The output tree.\n ",
      "start": 2634,
      "end": 3114,
      "loc": {
        "start": {
          "line": 83,
          "column": 0
        },
        "end": {
          "line": 97,
          "column": 3
        }
      }
    }
  ],
  "tokens": [
    {
      "type": {
        "label": "import",
        "keyword": "import",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "import",
      "start": 0,
      "end": 6,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 7,
      "end": 8,
      "loc": {
        "start": {
          "line": 1,
          "column": 7
        },
        "end": {
          "line": 1,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "append",
      "start": 8,
      "end": 14,
      "loc": {
        "start": {
          "line": 1,
          "column": 8
        },
        "end": {
          "line": 1,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 14,
      "end": 15,
      "loc": {
        "start": {
          "line": 1,
          "column": 14
        },
        "end": {
          "line": 1,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "prepend",
      "start": 16,
      "end": 23,
      "loc": {
        "start": {
          "line": 1,
          "column": 16
        },
        "end": {
          "line": 1,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 23,
      "end": 24,
      "loc": {
        "start": {
          "line": 1,
          "column": 23
        },
        "end": {
          "line": 1,
          "column": 24
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "from",
      "start": 25,
      "end": 29,
      "loc": {
        "start": {
          "line": 1,
          "column": 25
        },
        "end": {
          "line": 1,
          "column": 29
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "../../0-core/index.js",
      "start": 30,
      "end": 53,
      "loc": {
        "start": {
          "line": 1,
          "column": 30
        },
        "end": {
          "line": 1,
          "column": 53
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 53,
      "end": 54,
      "loc": {
        "start": {
          "line": 1,
          "column": 53
        },
        "end": {
          "line": 1,
          "column": 54
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Base class for all implementations.\n ",
      "start": 56,
      "end": 102,
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 5,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 103,
      "end": 109,
      "loc": {
        "start": {
          "line": 6,
          "column": 0
        },
        "end": {
          "line": 6,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "function",
        "keyword": "function",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "function",
      "start": 110,
      "end": 118,
      "loc": {
        "start": {
          "line": 6,
          "column": 7
        },
        "end": {
          "line": 6,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Tree",
      "start": 119,
      "end": 123,
      "loc": {
        "start": {
          "line": 6,
          "column": 16
        },
        "end": {
          "line": 6,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 123,
      "end": 124,
      "loc": {
        "start": {
          "line": 6,
          "column": 20
        },
        "end": {
          "line": 6,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 124,
      "end": 125,
      "loc": {
        "start": {
          "line": 6,
          "column": 21
        },
        "end": {
          "line": 6,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 126,
      "end": 127,
      "loc": {
        "start": {
          "line": 6,
          "column": 23
        },
        "end": {
          "line": 6,
          "column": 24
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 127,
      "end": 128,
      "loc": {
        "start": {
          "line": 6,
          "column": 24
        },
        "end": {
          "line": 6,
          "column": 25
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * For performance purposes, some of the operations are implemented lazily.\n * This method will force the (shallow) evaluation of this tree. This is an\n * implementation detail and need not be used by the user directly.\n *\n * @returns {Tree} The shallow evaluated tree.\n ",
      "start": 130,
      "end": 407,
      "loc": {
        "start": {
          "line": 8,
          "column": 0
        },
        "end": {
          "line": 14,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Tree",
      "start": 408,
      "end": 412,
      "loc": {
        "start": {
          "line": 15,
          "column": 0
        },
        "end": {
          "line": 15,
          "column": 4
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 412,
      "end": 413,
      "loc": {
        "start": {
          "line": 15,
          "column": 4
        },
        "end": {
          "line": 15,
          "column": 5
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "prototype",
      "start": 413,
      "end": 422,
      "loc": {
        "start": {
          "line": 15,
          "column": 5
        },
        "end": {
          "line": 15,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 422,
      "end": 423,
      "loc": {
        "start": {
          "line": 15,
          "column": 14
        },
        "end": {
          "line": 15,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "force",
      "start": 423,
      "end": 428,
      "loc": {
        "start": {
          "line": 15,
          "column": 15
        },
        "end": {
          "line": 15,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 429,
      "end": 430,
      "loc": {
        "start": {
          "line": 15,
          "column": 21
        },
        "end": {
          "line": 15,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": "function",
        "keyword": "function",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "function",
      "start": 431,
      "end": 439,
      "loc": {
        "start": {
          "line": 15,
          "column": 23
        },
        "end": {
          "line": 15,
          "column": 31
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 440,
      "end": 441,
      "loc": {
        "start": {
          "line": 15,
          "column": 32
        },
        "end": {
          "line": 15,
          "column": 33
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 441,
      "end": 442,
      "loc": {
        "start": {
          "line": 15,
          "column": 33
        },
        "end": {
          "line": 15,
          "column": 34
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 443,
      "end": 444,
      "loc": {
        "start": {
          "line": 15,
          "column": 35
        },
        "end": {
          "line": 15,
          "column": 36
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 446,
      "end": 452,
      "loc": {
        "start": {
          "line": 16,
          "column": 1
        },
        "end": {
          "line": 16,
          "column": 7
        }
      }
    },
    {
      "type": {
        "label": "this",
        "keyword": "this",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "this",
      "start": 453,
      "end": 457,
      "loc": {
        "start": {
          "line": 16,
          "column": 8
        },
        "end": {
          "line": 16,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 457,
      "end": 458,
      "loc": {
        "start": {
          "line": 16,
          "column": 12
        },
        "end": {
          "line": 16,
          "column": 13
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 459,
      "end": 460,
      "loc": {
        "start": {
          "line": 17,
          "column": 0
        },
        "end": {
          "line": 17,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 460,
      "end": 461,
      "loc": {
        "start": {
          "line": 17,
          "column": 1
        },
        "end": {
          "line": 17,
          "column": 2
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Returns a tree that contains a prefix of this tree's values left-to-right list.\n * The prefix is defined by containing all values for which the\n * input predicate evaluates to `false` on the measure\n * of the prefix ending with that value. The input predicate must be monotone\n * (`false` then `true`).\n *\n * @example\n * // returns 'ab'\n * import { from } from '@functional-data-structure/finger-tree' ;\n * import { Measures : { SIZE } } from '@functional-abstraction/measure' ;\n * let tree = from( SIZE , 'abc' ) ;\n * tree = tree.takeUntil( measure => measure > 2 ) ;\n * [ ...tree ].join('') ;\n *\n * @param {Function} predicate The input measure predicate (monotone).\n *\n * @returns {Tree} The output tree.\n ",
      "start": 463,
      "end": 1181,
      "loc": {
        "start": {
          "line": 19,
          "column": 0
        },
        "end": {
          "line": 37,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Tree",
      "start": 1182,
      "end": 1186,
      "loc": {
        "start": {
          "line": 38,
          "column": 0
        },
        "end": {
          "line": 38,
          "column": 4
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1186,
      "end": 1187,
      "loc": {
        "start": {
          "line": 38,
          "column": 4
        },
        "end": {
          "line": 38,
          "column": 5
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "prototype",
      "start": 1187,
      "end": 1196,
      "loc": {
        "start": {
          "line": 38,
          "column": 5
        },
        "end": {
          "line": 38,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1196,
      "end": 1197,
      "loc": {
        "start": {
          "line": 38,
          "column": 14
        },
        "end": {
          "line": 38,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "takeUntil",
      "start": 1197,
      "end": 1206,
      "loc": {
        "start": {
          "line": 38,
          "column": 15
        },
        "end": {
          "line": 38,
          "column": 24
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 1207,
      "end": 1208,
      "loc": {
        "start": {
          "line": 38,
          "column": 25
        },
        "end": {
          "line": 38,
          "column": 26
        }
      }
    },
    {
      "type": {
        "label": "function",
        "keyword": "function",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "function",
      "start": 1209,
      "end": 1217,
      "loc": {
        "start": {
          "line": 38,
          "column": 27
        },
        "end": {
          "line": 38,
          "column": 35
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1218,
      "end": 1219,
      "loc": {
        "start": {
          "line": 38,
          "column": 36
        },
        "end": {
          "line": 38,
          "column": 37
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "predicate",
      "start": 1219,
      "end": 1228,
      "loc": {
        "start": {
          "line": 38,
          "column": 37
        },
        "end": {
          "line": 38,
          "column": 46
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1228,
      "end": 1229,
      "loc": {
        "start": {
          "line": 38,
          "column": 46
        },
        "end": {
          "line": 38,
          "column": 47
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1230,
      "end": 1231,
      "loc": {
        "start": {
          "line": 38,
          "column": 48
        },
        "end": {
          "line": 38,
          "column": 49
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 1233,
      "end": 1239,
      "loc": {
        "start": {
          "line": 39,
          "column": 1
        },
        "end": {
          "line": 39,
          "column": 7
        }
      }
    },
    {
      "type": {
        "label": "this",
        "keyword": "this",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "this",
      "start": 1240,
      "end": 1244,
      "loc": {
        "start": {
          "line": 39,
          "column": 8
        },
        "end": {
          "line": 39,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1244,
      "end": 1245,
      "loc": {
        "start": {
          "line": 39,
          "column": 12
        },
        "end": {
          "line": 39,
          "column": 13
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "split",
      "start": 1245,
      "end": 1250,
      "loc": {
        "start": {
          "line": 39,
          "column": 13
        },
        "end": {
          "line": 39,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1250,
      "end": 1251,
      "loc": {
        "start": {
          "line": 39,
          "column": 18
        },
        "end": {
          "line": 39,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "predicate",
      "start": 1251,
      "end": 1260,
      "loc": {
        "start": {
          "line": 39,
          "column": 19
        },
        "end": {
          "line": 39,
          "column": 28
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1260,
      "end": 1261,
      "loc": {
        "start": {
          "line": 39,
          "column": 28
        },
        "end": {
          "line": 39,
          "column": 29
        }
      }
    },
    {
      "type": {
        "label": "[",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1261,
      "end": 1262,
      "loc": {
        "start": {
          "line": 39,
          "column": 29
        },
        "end": {
          "line": 39,
          "column": 30
        }
      }
    },
    {
      "type": {
        "label": "num",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": 0,
      "start": 1262,
      "end": 1263,
      "loc": {
        "start": {
          "line": 39,
          "column": 30
        },
        "end": {
          "line": 39,
          "column": 31
        }
      }
    },
    {
      "type": {
        "label": "]",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1263,
      "end": 1264,
      "loc": {
        "start": {
          "line": 39,
          "column": 31
        },
        "end": {
          "line": 39,
          "column": 32
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1264,
      "end": 1265,
      "loc": {
        "start": {
          "line": 39,
          "column": 32
        },
        "end": {
          "line": 39,
          "column": 33
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1266,
      "end": 1267,
      "loc": {
        "start": {
          "line": 40,
          "column": 0
        },
        "end": {
          "line": 40,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1267,
      "end": 1268,
      "loc": {
        "start": {
          "line": 40,
          "column": 1
        },
        "end": {
          "line": 40,
          "column": 2
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Returns a tree that contains a suffix of this tree's values left-to-right\n * list. The suffix is defined by containing all values for which the input\n * predicate evaluates to `true` on the measure of the prefix ending with that\n * value. The input predicate must be monotone (`false` then `true`).\n *\n * @example\n * // returns 'c'\n * import { from } from '@functional-data-structure/finger-tree' ;\n * import { Measures : { SIZE } } from '@functional-abstraction/measure' ;\n * let tree = from( SIZE , 'abc' ) ;\n * tree = tree.dropUntil( measure => measure > 2 ) ;\n * [ ...tree ].join('') ;\n *\n * @param {Function} predicate The input measure predicate (monotone).\n *\n * @returns {Tree} The output tree.\n ",
      "start": 1270,
      "end": 1983,
      "loc": {
        "start": {
          "line": 42,
          "column": 0
        },
        "end": {
          "line": 59,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Tree",
      "start": 1984,
      "end": 1988,
      "loc": {
        "start": {
          "line": 60,
          "column": 0
        },
        "end": {
          "line": 60,
          "column": 4
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1988,
      "end": 1989,
      "loc": {
        "start": {
          "line": 60,
          "column": 4
        },
        "end": {
          "line": 60,
          "column": 5
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "prototype",
      "start": 1989,
      "end": 1998,
      "loc": {
        "start": {
          "line": 60,
          "column": 5
        },
        "end": {
          "line": 60,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1998,
      "end": 1999,
      "loc": {
        "start": {
          "line": 60,
          "column": 14
        },
        "end": {
          "line": 60,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "dropUntil",
      "start": 1999,
      "end": 2008,
      "loc": {
        "start": {
          "line": 60,
          "column": 15
        },
        "end": {
          "line": 60,
          "column": 24
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 2009,
      "end": 2010,
      "loc": {
        "start": {
          "line": 60,
          "column": 25
        },
        "end": {
          "line": 60,
          "column": 26
        }
      }
    },
    {
      "type": {
        "label": "function",
        "keyword": "function",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "function",
      "start": 2011,
      "end": 2019,
      "loc": {
        "start": {
          "line": 60,
          "column": 27
        },
        "end": {
          "line": 60,
          "column": 35
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2020,
      "end": 2021,
      "loc": {
        "start": {
          "line": 60,
          "column": 36
        },
        "end": {
          "line": 60,
          "column": 37
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "predicate",
      "start": 2021,
      "end": 2030,
      "loc": {
        "start": {
          "line": 60,
          "column": 37
        },
        "end": {
          "line": 60,
          "column": 46
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2030,
      "end": 2031,
      "loc": {
        "start": {
          "line": 60,
          "column": 46
        },
        "end": {
          "line": 60,
          "column": 47
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2032,
      "end": 2033,
      "loc": {
        "start": {
          "line": 60,
          "column": 48
        },
        "end": {
          "line": 60,
          "column": 49
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 2035,
      "end": 2041,
      "loc": {
        "start": {
          "line": 61,
          "column": 1
        },
        "end": {
          "line": 61,
          "column": 7
        }
      }
    },
    {
      "type": {
        "label": "this",
        "keyword": "this",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "this",
      "start": 2042,
      "end": 2046,
      "loc": {
        "start": {
          "line": 61,
          "column": 8
        },
        "end": {
          "line": 61,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2046,
      "end": 2047,
      "loc": {
        "start": {
          "line": 61,
          "column": 12
        },
        "end": {
          "line": 61,
          "column": 13
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "split",
      "start": 2047,
      "end": 2052,
      "loc": {
        "start": {
          "line": 61,
          "column": 13
        },
        "end": {
          "line": 61,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2052,
      "end": 2053,
      "loc": {
        "start": {
          "line": 61,
          "column": 18
        },
        "end": {
          "line": 61,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "predicate",
      "start": 2053,
      "end": 2062,
      "loc": {
        "start": {
          "line": 61,
          "column": 19
        },
        "end": {
          "line": 61,
          "column": 28
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2062,
      "end": 2063,
      "loc": {
        "start": {
          "line": 61,
          "column": 28
        },
        "end": {
          "line": 61,
          "column": 29
        }
      }
    },
    {
      "type": {
        "label": "[",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2063,
      "end": 2064,
      "loc": {
        "start": {
          "line": 61,
          "column": 29
        },
        "end": {
          "line": 61,
          "column": 30
        }
      }
    },
    {
      "type": {
        "label": "num",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": 1,
      "start": 2064,
      "end": 2065,
      "loc": {
        "start": {
          "line": 61,
          "column": 30
        },
        "end": {
          "line": 61,
          "column": 31
        }
      }
    },
    {
      "type": {
        "label": "]",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2065,
      "end": 2066,
      "loc": {
        "start": {
          "line": 61,
          "column": 31
        },
        "end": {
          "line": 61,
          "column": 32
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2066,
      "end": 2067,
      "loc": {
        "start": {
          "line": 61,
          "column": 32
        },
        "end": {
          "line": 61,
          "column": 33
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2068,
      "end": 2069,
      "loc": {
        "start": {
          "line": 62,
          "column": 0
        },
        "end": {
          "line": 62,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2069,
      "end": 2070,
      "loc": {
        "start": {
          "line": 62,
          "column": 1
        },
        "end": {
          "line": 62,
          "column": 2
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Returns a tree that contains all values of this tree in-order followed by\n * all values of the input iterable in-order.\n *\n * @example\n * // returns 'abc123'\n * import { from } from '@functional-data-structure/finger-tree' ;\n * import { Measures : { SIZE } } from '@functional-abstraction/measure' ;\n * let tree = from( SIZE , 'abc' ).append('123') ;\n * [ ...tree ].join('') ;\n *\n * @param {Iterable} iterable The input iterable.\n *\n * @returns {Tree} The output tree.\n ",
      "start": 2072,
      "end": 2551,
      "loc": {
        "start": {
          "line": 64,
          "column": 0
        },
        "end": {
          "line": 78,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Tree",
      "start": 2552,
      "end": 2556,
      "loc": {
        "start": {
          "line": 79,
          "column": 0
        },
        "end": {
          "line": 79,
          "column": 4
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2556,
      "end": 2557,
      "loc": {
        "start": {
          "line": 79,
          "column": 4
        },
        "end": {
          "line": 79,
          "column": 5
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "prototype",
      "start": 2557,
      "end": 2566,
      "loc": {
        "start": {
          "line": 79,
          "column": 5
        },
        "end": {
          "line": 79,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2566,
      "end": 2567,
      "loc": {
        "start": {
          "line": 79,
          "column": 14
        },
        "end": {
          "line": 79,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "append",
      "start": 2567,
      "end": 2573,
      "loc": {
        "start": {
          "line": 79,
          "column": 15
        },
        "end": {
          "line": 79,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 2574,
      "end": 2575,
      "loc": {
        "start": {
          "line": 79,
          "column": 22
        },
        "end": {
          "line": 79,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": "function",
        "keyword": "function",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "function",
      "start": 2576,
      "end": 2584,
      "loc": {
        "start": {
          "line": 79,
          "column": 24
        },
        "end": {
          "line": 79,
          "column": 32
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2585,
      "end": 2586,
      "loc": {
        "start": {
          "line": 79,
          "column": 33
        },
        "end": {
          "line": 79,
          "column": 34
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "iterable",
      "start": 2586,
      "end": 2594,
      "loc": {
        "start": {
          "line": 79,
          "column": 34
        },
        "end": {
          "line": 79,
          "column": 42
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2594,
      "end": 2595,
      "loc": {
        "start": {
          "line": 79,
          "column": 42
        },
        "end": {
          "line": 79,
          "column": 43
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2596,
      "end": 2597,
      "loc": {
        "start": {
          "line": 79,
          "column": 44
        },
        "end": {
          "line": 79,
          "column": 45
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 2599,
      "end": 2605,
      "loc": {
        "start": {
          "line": 80,
          "column": 1
        },
        "end": {
          "line": 80,
          "column": 7
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "append",
      "start": 2606,
      "end": 2612,
      "loc": {
        "start": {
          "line": 80,
          "column": 8
        },
        "end": {
          "line": 80,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2612,
      "end": 2613,
      "loc": {
        "start": {
          "line": 80,
          "column": 14
        },
        "end": {
          "line": 80,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "this",
        "keyword": "this",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "this",
      "start": 2613,
      "end": 2617,
      "loc": {
        "start": {
          "line": 80,
          "column": 15
        },
        "end": {
          "line": 80,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2617,
      "end": 2618,
      "loc": {
        "start": {
          "line": 80,
          "column": 19
        },
        "end": {
          "line": 80,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "iterable",
      "start": 2619,
      "end": 2627,
      "loc": {
        "start": {
          "line": 80,
          "column": 21
        },
        "end": {
          "line": 80,
          "column": 29
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2627,
      "end": 2628,
      "loc": {
        "start": {
          "line": 80,
          "column": 29
        },
        "end": {
          "line": 80,
          "column": 30
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2628,
      "end": 2629,
      "loc": {
        "start": {
          "line": 80,
          "column": 30
        },
        "end": {
          "line": 80,
          "column": 31
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2630,
      "end": 2631,
      "loc": {
        "start": {
          "line": 81,
          "column": 0
        },
        "end": {
          "line": 81,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2631,
      "end": 2632,
      "loc": {
        "start": {
          "line": 81,
          "column": 1
        },
        "end": {
          "line": 81,
          "column": 2
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Returns a tree that contains all values of the input iterable in-order\n * followed by all values of this tree in-order.\n *\n * @example\n * // returns '123abc'\n * import { from } from '@functional-data-structure/finger-tree' ;\n * import { Measures : { SIZE } } from '@functional-abstraction/measure' ;\n * let tree = from( SIZE , 'abc' ).prepend('123') ;\n * [ ...tree ].join('') ;\n *\n * @param {Iterable} iterable The input iterable.\n *\n * @returns {Tree} The output tree.\n ",
      "start": 2634,
      "end": 3114,
      "loc": {
        "start": {
          "line": 83,
          "column": 0
        },
        "end": {
          "line": 97,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Tree",
      "start": 3115,
      "end": 3119,
      "loc": {
        "start": {
          "line": 98,
          "column": 0
        },
        "end": {
          "line": 98,
          "column": 4
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3119,
      "end": 3120,
      "loc": {
        "start": {
          "line": 98,
          "column": 4
        },
        "end": {
          "line": 98,
          "column": 5
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "prototype",
      "start": 3120,
      "end": 3129,
      "loc": {
        "start": {
          "line": 98,
          "column": 5
        },
        "end": {
          "line": 98,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3129,
      "end": 3130,
      "loc": {
        "start": {
          "line": 98,
          "column": 14
        },
        "end": {
          "line": 98,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "prepend",
      "start": 3130,
      "end": 3137,
      "loc": {
        "start": {
          "line": 98,
          "column": 15
        },
        "end": {
          "line": 98,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 3138,
      "end": 3139,
      "loc": {
        "start": {
          "line": 98,
          "column": 23
        },
        "end": {
          "line": 98,
          "column": 24
        }
      }
    },
    {
      "type": {
        "label": "function",
        "keyword": "function",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "function",
      "start": 3140,
      "end": 3148,
      "loc": {
        "start": {
          "line": 98,
          "column": 25
        },
        "end": {
          "line": 98,
          "column": 33
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3149,
      "end": 3150,
      "loc": {
        "start": {
          "line": 98,
          "column": 34
        },
        "end": {
          "line": 98,
          "column": 35
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "iterable",
      "start": 3150,
      "end": 3158,
      "loc": {
        "start": {
          "line": 98,
          "column": 35
        },
        "end": {
          "line": 98,
          "column": 43
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3158,
      "end": 3159,
      "loc": {
        "start": {
          "line": 98,
          "column": 43
        },
        "end": {
          "line": 98,
          "column": 44
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3160,
      "end": 3161,
      "loc": {
        "start": {
          "line": 98,
          "column": 45
        },
        "end": {
          "line": 98,
          "column": 46
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 3163,
      "end": 3169,
      "loc": {
        "start": {
          "line": 99,
          "column": 1
        },
        "end": {
          "line": 99,
          "column": 7
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "prepend",
      "start": 3170,
      "end": 3177,
      "loc": {
        "start": {
          "line": 99,
          "column": 8
        },
        "end": {
          "line": 99,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3177,
      "end": 3178,
      "loc": {
        "start": {
          "line": 99,
          "column": 15
        },
        "end": {
          "line": 99,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": "this",
        "keyword": "this",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "this",
      "start": 3178,
      "end": 3182,
      "loc": {
        "start": {
          "line": 99,
          "column": 16
        },
        "end": {
          "line": 99,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3182,
      "end": 3183,
      "loc": {
        "start": {
          "line": 99,
          "column": 20
        },
        "end": {
          "line": 99,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "iterable",
      "start": 3184,
      "end": 3192,
      "loc": {
        "start": {
          "line": 99,
          "column": 22
        },
        "end": {
          "line": 99,
          "column": 30
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3192,
      "end": 3193,
      "loc": {
        "start": {
          "line": 99,
          "column": 30
        },
        "end": {
          "line": 99,
          "column": 31
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3193,
      "end": 3194,
      "loc": {
        "start": {
          "line": 99,
          "column": 31
        },
        "end": {
          "line": 99,
          "column": 32
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3195,
      "end": 3196,
      "loc": {
        "start": {
          "line": 100,
          "column": 0
        },
        "end": {
          "line": 100,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3196,
      "end": 3197,
      "loc": {
        "start": {
          "line": 100,
          "column": 1
        },
        "end": {
          "line": 100,
          "column": 2
        }
      }
    },
    {
      "type": {
        "label": "eof",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3198,
      "end": 3198,
      "loc": {
        "start": {
          "line": 101,
          "column": 0
        },
        "end": {
          "line": 101,
          "column": 0
        }
      }
    }
  ]
}