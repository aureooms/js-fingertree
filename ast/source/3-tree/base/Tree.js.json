{
  "type": "File",
  "start": 0,
  "end": 3121,
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 101,
      "column": 0
    }
  },
  "program": {
    "type": "Program",
    "start": 0,
    "end": 3121,
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 101,
        "column": 0
      }
    },
    "sourceType": "module",
    "body": [
      {
        "type": "ImportDeclaration",
        "start": 0,
        "end": 49,
        "loc": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 49
          }
        },
        "specifiers": [
          {
            "type": "ImportSpecifier",
            "start": 9,
            "end": 15,
            "loc": {
              "start": {
                "line": 1,
                "column": 9
              },
              "end": {
                "line": 1,
                "column": 15
              }
            },
            "imported": {
              "type": "Identifier",
              "start": 9,
              "end": 15,
              "loc": {
                "start": {
                  "line": 1,
                  "column": 9
                },
                "end": {
                  "line": 1,
                  "column": 15
                },
                "identifierName": "append"
              },
              "name": "append"
            },
            "local": {
              "type": "Identifier",
              "start": 9,
              "end": 15,
              "loc": {
                "start": {
                  "line": 1,
                  "column": 9
                },
                "end": {
                  "line": 1,
                  "column": 15
                },
                "identifierName": "append"
              },
              "name": "append"
            }
          },
          {
            "type": "ImportSpecifier",
            "start": 18,
            "end": 25,
            "loc": {
              "start": {
                "line": 1,
                "column": 18
              },
              "end": {
                "line": 1,
                "column": 25
              }
            },
            "imported": {
              "type": "Identifier",
              "start": 18,
              "end": 25,
              "loc": {
                "start": {
                  "line": 1,
                  "column": 18
                },
                "end": {
                  "line": 1,
                  "column": 25
                },
                "identifierName": "prepend"
              },
              "name": "prepend"
            },
            "local": {
              "type": "Identifier",
              "start": 18,
              "end": 25,
              "loc": {
                "start": {
                  "line": 1,
                  "column": 18
                },
                "end": {
                  "line": 1,
                  "column": 25
                },
                "identifierName": "prepend"
              },
              "name": "prepend"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "start": 33,
          "end": 47,
          "loc": {
            "start": {
              "line": 1,
              "column": 33
            },
            "end": {
              "line": 1,
              "column": 47
            }
          },
          "extra": {
            "rawValue": "../../0-core",
            "raw": "'../../0-core'"
          },
          "value": "../../0-core"
        },
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Base class for all implementations.\n ",
            "start": 51,
            "end": 97,
            "loc": {
              "start": {
                "line": 3,
                "column": 0
              },
              "end": {
                "line": 5,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 98,
        "end": 126,
        "loc": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 28
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "FunctionDeclaration",
          "start": 105,
          "end": 126,
          "loc": {
            "start": {
              "line": 6,
              "column": 7
            },
            "end": {
              "line": 6,
              "column": 28
            }
          },
          "id": {
            "type": "Identifier",
            "start": 114,
            "end": 118,
            "loc": {
              "start": {
                "line": 6,
                "column": 16
              },
              "end": {
                "line": 6,
                "column": 20
              },
              "identifierName": "Tree"
            },
            "name": "Tree",
            "leadingComments": null
          },
          "generator": false,
          "expression": false,
          "async": false,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "start": 123,
            "end": 126,
            "loc": {
              "start": {
                "line": 6,
                "column": 25
              },
              "end": {
                "line": 6,
                "column": 28
              }
            },
            "body": [],
            "directives": [],
            "leadingComments": null,
            "trailingComments": null
          },
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Base class for all implementations.\n ",
              "start": 51,
              "end": 97,
              "loc": {
                "start": {
                  "line": 3,
                  "column": 0
                },
                "end": {
                  "line": 5,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * For performance purposes, some of the operations are implemented lazily.\n * This method will force the (shallow) evaluation of this tree. This is an\n * implementation detail and need not be used by the user directly.\n *\n * @returns {Tree} The shallow evaluated tree.\n ",
              "start": 128,
              "end": 405,
              "loc": {
                "start": {
                  "line": 8,
                  "column": 0
                },
                "end": {
                  "line": 14,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Base class for all implementations.\n ",
            "start": 51,
            "end": 97,
            "loc": {
              "start": {
                "line": 3,
                "column": 0
              },
              "end": {
                "line": 5,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * For performance purposes, some of the operations are implemented lazily.\n * This method will force the (shallow) evaluation of this tree. This is an\n * implementation detail and need not be used by the user directly.\n *\n * @returns {Tree} The shallow evaluated tree.\n ",
            "start": 128,
            "end": 405,
            "loc": {
              "start": {
                "line": 8,
                "column": 0
              },
              "end": {
                "line": 14,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExpressionStatement",
        "start": 406,
        "end": 462,
        "loc": {
          "start": {
            "line": 15,
            "column": 0
          },
          "end": {
            "line": 17,
            "column": 3
          }
        },
        "expression": {
          "type": "AssignmentExpression",
          "start": 406,
          "end": 460,
          "loc": {
            "start": {
              "line": 15,
              "column": 0
            },
            "end": {
              "line": 17,
              "column": 1
            }
          },
          "operator": "=",
          "left": {
            "type": "MemberExpression",
            "start": 406,
            "end": 426,
            "loc": {
              "start": {
                "line": 15,
                "column": 0
              },
              "end": {
                "line": 15,
                "column": 20
              }
            },
            "object": {
              "type": "MemberExpression",
              "start": 406,
              "end": 420,
              "loc": {
                "start": {
                  "line": 15,
                  "column": 0
                },
                "end": {
                  "line": 15,
                  "column": 14
                }
              },
              "object": {
                "type": "Identifier",
                "start": 406,
                "end": 410,
                "loc": {
                  "start": {
                    "line": 15,
                    "column": 0
                  },
                  "end": {
                    "line": 15,
                    "column": 4
                  },
                  "identifierName": "Tree"
                },
                "name": "Tree",
                "leadingComments": null
              },
              "property": {
                "type": "Identifier",
                "start": 411,
                "end": 420,
                "loc": {
                  "start": {
                    "line": 15,
                    "column": 5
                  },
                  "end": {
                    "line": 15,
                    "column": 14
                  },
                  "identifierName": "prototype"
                },
                "name": "prototype"
              },
              "computed": false,
              "leadingComments": null
            },
            "property": {
              "type": "Identifier",
              "start": 421,
              "end": 426,
              "loc": {
                "start": {
                  "line": 15,
                  "column": 15
                },
                "end": {
                  "line": 15,
                  "column": 20
                },
                "identifierName": "force"
              },
              "name": "force"
            },
            "computed": false,
            "leadingComments": null
          },
          "right": {
            "type": "FunctionExpression",
            "start": 429,
            "end": 460,
            "loc": {
              "start": {
                "line": 15,
                "column": 23
              },
              "end": {
                "line": 17,
                "column": 1
              }
            },
            "id": {
              "type": "Identifier",
              "start": 421,
              "end": 426,
              "loc": {
                "start": {
                  "line": 15,
                  "column": 15
                },
                "end": {
                  "line": 15,
                  "column": 20
                },
                "identifierName": "force"
              },
              "name": "force"
            },
            "generator": false,
            "expression": false,
            "async": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "start": 442,
              "end": 460,
              "loc": {
                "start": {
                  "line": 15,
                  "column": 36
                },
                "end": {
                  "line": 17,
                  "column": 1
                }
              },
              "body": [
                {
                  "type": "ReturnStatement",
                  "start": 445,
                  "end": 458,
                  "loc": {
                    "start": {
                      "line": 16,
                      "column": 1
                    },
                    "end": {
                      "line": 16,
                      "column": 14
                    }
                  },
                  "argument": {
                    "type": "ThisExpression",
                    "start": 452,
                    "end": 456,
                    "loc": {
                      "start": {
                        "line": 16,
                        "column": 8
                      },
                      "end": {
                        "line": 16,
                        "column": 12
                      }
                    }
                  }
                }
              ],
              "directives": []
            }
          },
          "leadingComments": null
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * For performance purposes, some of the operations are implemented lazily.\n * This method will force the (shallow) evaluation of this tree. This is an\n * implementation detail and need not be used by the user directly.\n *\n * @returns {Tree} The shallow evaluated tree.\n ",
            "start": 128,
            "end": 405,
            "loc": {
              "start": {
                "line": 8,
                "column": 0
              },
              "end": {
                "line": 14,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Returns a tree that contains a prefix of this tree's values left-to-right list.\n * The prefix is defined by containing all values for which the\n * input predicate evaluates to `false` on the measure\n * of the prefix ending with that value. The input predicate must be monotone\n * (`false` then `true`).\n *\n * @example\n * // returns 'ab'\n * import { from } from '@aureooms/js-fingertree' ;\n * import { Measures : { SIZE } } from '@aureooms/js-measure' ;\n * let tree = from( SIZE , 'abc' ) ;\n * tree = tree.takeUntil( measure => measure > 2 ) ;\n * [ ...tree ].join('') ;\n *\n * @param {Function} predicate The input measure predicate (monotone).\n *\n * @returns {Tree} The output tree.\n ",
            "start": 464,
            "end": 1156,
            "loc": {
              "start": {
                "line": 19,
                "column": 0
              },
              "end": {
                "line": 37,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExpressionStatement",
        "start": 1157,
        "end": 1249,
        "loc": {
          "start": {
            "line": 38,
            "column": 0
          },
          "end": {
            "line": 40,
            "column": 3
          }
        },
        "expression": {
          "type": "AssignmentExpression",
          "start": 1157,
          "end": 1247,
          "loc": {
            "start": {
              "line": 38,
              "column": 0
            },
            "end": {
              "line": 40,
              "column": 1
            }
          },
          "operator": "=",
          "left": {
            "type": "MemberExpression",
            "start": 1157,
            "end": 1181,
            "loc": {
              "start": {
                "line": 38,
                "column": 0
              },
              "end": {
                "line": 38,
                "column": 24
              }
            },
            "object": {
              "type": "MemberExpression",
              "start": 1157,
              "end": 1171,
              "loc": {
                "start": {
                  "line": 38,
                  "column": 0
                },
                "end": {
                  "line": 38,
                  "column": 14
                }
              },
              "object": {
                "type": "Identifier",
                "start": 1157,
                "end": 1161,
                "loc": {
                  "start": {
                    "line": 38,
                    "column": 0
                  },
                  "end": {
                    "line": 38,
                    "column": 4
                  },
                  "identifierName": "Tree"
                },
                "name": "Tree",
                "leadingComments": null
              },
              "property": {
                "type": "Identifier",
                "start": 1162,
                "end": 1171,
                "loc": {
                  "start": {
                    "line": 38,
                    "column": 5
                  },
                  "end": {
                    "line": 38,
                    "column": 14
                  },
                  "identifierName": "prototype"
                },
                "name": "prototype"
              },
              "computed": false,
              "leadingComments": null
            },
            "property": {
              "type": "Identifier",
              "start": 1172,
              "end": 1181,
              "loc": {
                "start": {
                  "line": 38,
                  "column": 15
                },
                "end": {
                  "line": 38,
                  "column": 24
                },
                "identifierName": "takeUntil"
              },
              "name": "takeUntil"
            },
            "computed": false,
            "leadingComments": null
          },
          "right": {
            "type": "FunctionExpression",
            "start": 1184,
            "end": 1247,
            "loc": {
              "start": {
                "line": 38,
                "column": 27
              },
              "end": {
                "line": 40,
                "column": 1
              }
            },
            "id": {
              "type": "Identifier",
              "start": 1172,
              "end": 1181,
              "loc": {
                "start": {
                  "line": 38,
                  "column": 15
                },
                "end": {
                  "line": 38,
                  "column": 24
                },
                "identifierName": "takeUntil"
              },
              "name": "takeUntil"
            },
            "generator": false,
            "expression": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "start": 1195,
                "end": 1204,
                "loc": {
                  "start": {
                    "line": 38,
                    "column": 38
                  },
                  "end": {
                    "line": 38,
                    "column": 47
                  },
                  "identifierName": "predicate"
                },
                "name": "predicate"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "start": 1207,
              "end": 1247,
              "loc": {
                "start": {
                  "line": 38,
                  "column": 50
                },
                "end": {
                  "line": 40,
                  "column": 1
                }
              },
              "body": [
                {
                  "type": "ReturnStatement",
                  "start": 1210,
                  "end": 1245,
                  "loc": {
                    "start": {
                      "line": 39,
                      "column": 1
                    },
                    "end": {
                      "line": 39,
                      "column": 36
                    }
                  },
                  "argument": {
                    "type": "MemberExpression",
                    "start": 1217,
                    "end": 1243,
                    "loc": {
                      "start": {
                        "line": 39,
                        "column": 8
                      },
                      "end": {
                        "line": 39,
                        "column": 34
                      }
                    },
                    "object": {
                      "type": "CallExpression",
                      "start": 1217,
                      "end": 1240,
                      "loc": {
                        "start": {
                          "line": 39,
                          "column": 8
                        },
                        "end": {
                          "line": 39,
                          "column": 31
                        }
                      },
                      "callee": {
                        "type": "MemberExpression",
                        "start": 1217,
                        "end": 1227,
                        "loc": {
                          "start": {
                            "line": 39,
                            "column": 8
                          },
                          "end": {
                            "line": 39,
                            "column": 18
                          }
                        },
                        "object": {
                          "type": "ThisExpression",
                          "start": 1217,
                          "end": 1221,
                          "loc": {
                            "start": {
                              "line": 39,
                              "column": 8
                            },
                            "end": {
                              "line": 39,
                              "column": 12
                            }
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 1222,
                          "end": 1227,
                          "loc": {
                            "start": {
                              "line": 39,
                              "column": 13
                            },
                            "end": {
                              "line": 39,
                              "column": 18
                            },
                            "identifierName": "split"
                          },
                          "name": "split"
                        },
                        "computed": false
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "start": 1229,
                          "end": 1238,
                          "loc": {
                            "start": {
                              "line": 39,
                              "column": 20
                            },
                            "end": {
                              "line": 39,
                              "column": 29
                            },
                            "identifierName": "predicate"
                          },
                          "name": "predicate"
                        }
                      ]
                    },
                    "property": {
                      "type": "NumericLiteral",
                      "start": 1241,
                      "end": 1242,
                      "loc": {
                        "start": {
                          "line": 39,
                          "column": 32
                        },
                        "end": {
                          "line": 39,
                          "column": 33
                        }
                      },
                      "extra": {
                        "rawValue": 0,
                        "raw": "0"
                      },
                      "value": 0
                    },
                    "computed": true
                  }
                }
              ],
              "directives": []
            }
          },
          "leadingComments": null
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Returns a tree that contains a prefix of this tree's values left-to-right list.\n * The prefix is defined by containing all values for which the\n * input predicate evaluates to `false` on the measure\n * of the prefix ending with that value. The input predicate must be monotone\n * (`false` then `true`).\n *\n * @example\n * // returns 'ab'\n * import { from } from '@aureooms/js-fingertree' ;\n * import { Measures : { SIZE } } from '@aureooms/js-measure' ;\n * let tree = from( SIZE , 'abc' ) ;\n * tree = tree.takeUntil( measure => measure > 2 ) ;\n * [ ...tree ].join('') ;\n *\n * @param {Function} predicate The input measure predicate (monotone).\n *\n * @returns {Tree} The output tree.\n ",
            "start": 464,
            "end": 1156,
            "loc": {
              "start": {
                "line": 19,
                "column": 0
              },
              "end": {
                "line": 37,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Returns a tree that contains a suffix of this tree's values left-to-right\n * list. The suffix is defined by containing all values for which the input\n * predicate evaluates to `true` on the measure of the prefix ending with that\n * value. The input predicate must be monotone (`false` then `true`).\n *\n * @example\n * // returns 'c'\n * import { from } from '@aureooms/js-fingertree' ;\n * import { Measures : { SIZE } } from '@aureooms/js-measure' ;\n * let tree = from( SIZE , 'abc' ) ;\n * tree = tree.dropUntil( measure => measure > 2 ) ;\n * [ ...tree ].join('') ;\n *\n * @param {Function} predicate The input measure predicate (monotone).\n *\n * @returns {Tree} The output tree.\n ",
            "start": 1251,
            "end": 1938,
            "loc": {
              "start": {
                "line": 42,
                "column": 0
              },
              "end": {
                "line": 59,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExpressionStatement",
        "start": 1939,
        "end": 2031,
        "loc": {
          "start": {
            "line": 60,
            "column": 0
          },
          "end": {
            "line": 62,
            "column": 3
          }
        },
        "expression": {
          "type": "AssignmentExpression",
          "start": 1939,
          "end": 2029,
          "loc": {
            "start": {
              "line": 60,
              "column": 0
            },
            "end": {
              "line": 62,
              "column": 1
            }
          },
          "operator": "=",
          "left": {
            "type": "MemberExpression",
            "start": 1939,
            "end": 1963,
            "loc": {
              "start": {
                "line": 60,
                "column": 0
              },
              "end": {
                "line": 60,
                "column": 24
              }
            },
            "object": {
              "type": "MemberExpression",
              "start": 1939,
              "end": 1953,
              "loc": {
                "start": {
                  "line": 60,
                  "column": 0
                },
                "end": {
                  "line": 60,
                  "column": 14
                }
              },
              "object": {
                "type": "Identifier",
                "start": 1939,
                "end": 1943,
                "loc": {
                  "start": {
                    "line": 60,
                    "column": 0
                  },
                  "end": {
                    "line": 60,
                    "column": 4
                  },
                  "identifierName": "Tree"
                },
                "name": "Tree",
                "leadingComments": null
              },
              "property": {
                "type": "Identifier",
                "start": 1944,
                "end": 1953,
                "loc": {
                  "start": {
                    "line": 60,
                    "column": 5
                  },
                  "end": {
                    "line": 60,
                    "column": 14
                  },
                  "identifierName": "prototype"
                },
                "name": "prototype"
              },
              "computed": false,
              "leadingComments": null
            },
            "property": {
              "type": "Identifier",
              "start": 1954,
              "end": 1963,
              "loc": {
                "start": {
                  "line": 60,
                  "column": 15
                },
                "end": {
                  "line": 60,
                  "column": 24
                },
                "identifierName": "dropUntil"
              },
              "name": "dropUntil"
            },
            "computed": false,
            "leadingComments": null
          },
          "right": {
            "type": "FunctionExpression",
            "start": 1966,
            "end": 2029,
            "loc": {
              "start": {
                "line": 60,
                "column": 27
              },
              "end": {
                "line": 62,
                "column": 1
              }
            },
            "id": {
              "type": "Identifier",
              "start": 1954,
              "end": 1963,
              "loc": {
                "start": {
                  "line": 60,
                  "column": 15
                },
                "end": {
                  "line": 60,
                  "column": 24
                },
                "identifierName": "dropUntil"
              },
              "name": "dropUntil"
            },
            "generator": false,
            "expression": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "start": 1977,
                "end": 1986,
                "loc": {
                  "start": {
                    "line": 60,
                    "column": 38
                  },
                  "end": {
                    "line": 60,
                    "column": 47
                  },
                  "identifierName": "predicate"
                },
                "name": "predicate"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "start": 1989,
              "end": 2029,
              "loc": {
                "start": {
                  "line": 60,
                  "column": 50
                },
                "end": {
                  "line": 62,
                  "column": 1
                }
              },
              "body": [
                {
                  "type": "ReturnStatement",
                  "start": 1992,
                  "end": 2027,
                  "loc": {
                    "start": {
                      "line": 61,
                      "column": 1
                    },
                    "end": {
                      "line": 61,
                      "column": 36
                    }
                  },
                  "argument": {
                    "type": "MemberExpression",
                    "start": 1999,
                    "end": 2025,
                    "loc": {
                      "start": {
                        "line": 61,
                        "column": 8
                      },
                      "end": {
                        "line": 61,
                        "column": 34
                      }
                    },
                    "object": {
                      "type": "CallExpression",
                      "start": 1999,
                      "end": 2022,
                      "loc": {
                        "start": {
                          "line": 61,
                          "column": 8
                        },
                        "end": {
                          "line": 61,
                          "column": 31
                        }
                      },
                      "callee": {
                        "type": "MemberExpression",
                        "start": 1999,
                        "end": 2009,
                        "loc": {
                          "start": {
                            "line": 61,
                            "column": 8
                          },
                          "end": {
                            "line": 61,
                            "column": 18
                          }
                        },
                        "object": {
                          "type": "ThisExpression",
                          "start": 1999,
                          "end": 2003,
                          "loc": {
                            "start": {
                              "line": 61,
                              "column": 8
                            },
                            "end": {
                              "line": 61,
                              "column": 12
                            }
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 2004,
                          "end": 2009,
                          "loc": {
                            "start": {
                              "line": 61,
                              "column": 13
                            },
                            "end": {
                              "line": 61,
                              "column": 18
                            },
                            "identifierName": "split"
                          },
                          "name": "split"
                        },
                        "computed": false
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "start": 2011,
                          "end": 2020,
                          "loc": {
                            "start": {
                              "line": 61,
                              "column": 20
                            },
                            "end": {
                              "line": 61,
                              "column": 29
                            },
                            "identifierName": "predicate"
                          },
                          "name": "predicate"
                        }
                      ]
                    },
                    "property": {
                      "type": "NumericLiteral",
                      "start": 2023,
                      "end": 2024,
                      "loc": {
                        "start": {
                          "line": 61,
                          "column": 32
                        },
                        "end": {
                          "line": 61,
                          "column": 33
                        }
                      },
                      "extra": {
                        "rawValue": 1,
                        "raw": "1"
                      },
                      "value": 1
                    },
                    "computed": true
                  }
                }
              ],
              "directives": []
            }
          },
          "leadingComments": null
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Returns a tree that contains a suffix of this tree's values left-to-right\n * list. The suffix is defined by containing all values for which the input\n * predicate evaluates to `true` on the measure of the prefix ending with that\n * value. The input predicate must be monotone (`false` then `true`).\n *\n * @example\n * // returns 'c'\n * import { from } from '@aureooms/js-fingertree' ;\n * import { Measures : { SIZE } } from '@aureooms/js-measure' ;\n * let tree = from( SIZE , 'abc' ) ;\n * tree = tree.dropUntil( measure => measure > 2 ) ;\n * [ ...tree ].join('') ;\n *\n * @param {Function} predicate The input measure predicate (monotone).\n *\n * @returns {Tree} The output tree.\n ",
            "start": 1251,
            "end": 1938,
            "loc": {
              "start": {
                "line": 42,
                "column": 0
              },
              "end": {
                "line": 59,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Returns a tree that contains all values of this tree in-order followed by\n * all values of the input iterable in-order.\n *\n * @example\n * // returns 'abc123'\n * import { from } from '@aureooms/js-fingertree' ;\n * import { Measures : { SIZE } } from '@aureooms/js-measure' ;\n * let tree = from( SIZE , 'abc' ).append('123') ;\n * [ ...tree ].join('') ;\n *\n * @param {Iterable} iterable The input iterable.\n *\n * @returns {Tree} The output tree.\n ",
            "start": 2033,
            "end": 2486,
            "loc": {
              "start": {
                "line": 64,
                "column": 0
              },
              "end": {
                "line": 78,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExpressionStatement",
        "start": 2487,
        "end": 2574,
        "loc": {
          "start": {
            "line": 79,
            "column": 0
          },
          "end": {
            "line": 81,
            "column": 3
          }
        },
        "expression": {
          "type": "AssignmentExpression",
          "start": 2487,
          "end": 2572,
          "loc": {
            "start": {
              "line": 79,
              "column": 0
            },
            "end": {
              "line": 81,
              "column": 1
            }
          },
          "operator": "=",
          "left": {
            "type": "MemberExpression",
            "start": 2487,
            "end": 2508,
            "loc": {
              "start": {
                "line": 79,
                "column": 0
              },
              "end": {
                "line": 79,
                "column": 21
              }
            },
            "object": {
              "type": "MemberExpression",
              "start": 2487,
              "end": 2501,
              "loc": {
                "start": {
                  "line": 79,
                  "column": 0
                },
                "end": {
                  "line": 79,
                  "column": 14
                }
              },
              "object": {
                "type": "Identifier",
                "start": 2487,
                "end": 2491,
                "loc": {
                  "start": {
                    "line": 79,
                    "column": 0
                  },
                  "end": {
                    "line": 79,
                    "column": 4
                  },
                  "identifierName": "Tree"
                },
                "name": "Tree",
                "leadingComments": null
              },
              "property": {
                "type": "Identifier",
                "start": 2492,
                "end": 2501,
                "loc": {
                  "start": {
                    "line": 79,
                    "column": 5
                  },
                  "end": {
                    "line": 79,
                    "column": 14
                  },
                  "identifierName": "prototype"
                },
                "name": "prototype"
              },
              "computed": false,
              "leadingComments": null
            },
            "property": {
              "type": "Identifier",
              "start": 2502,
              "end": 2508,
              "loc": {
                "start": {
                  "line": 79,
                  "column": 15
                },
                "end": {
                  "line": 79,
                  "column": 21
                },
                "identifierName": "append"
              },
              "name": "append"
            },
            "computed": false,
            "leadingComments": null
          },
          "right": {
            "type": "FunctionExpression",
            "start": 2511,
            "end": 2572,
            "loc": {
              "start": {
                "line": 79,
                "column": 24
              },
              "end": {
                "line": 81,
                "column": 1
              }
            },
            "id": {
              "type": "Identifier",
              "start": 2502,
              "end": 2508,
              "loc": {
                "start": {
                  "line": 79,
                  "column": 15
                },
                "end": {
                  "line": 79,
                  "column": 21
                },
                "identifierName": "append"
              },
              "name": "append"
            },
            "generator": false,
            "expression": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "start": 2522,
                "end": 2530,
                "loc": {
                  "start": {
                    "line": 79,
                    "column": 35
                  },
                  "end": {
                    "line": 79,
                    "column": 43
                  },
                  "identifierName": "iterable"
                },
                "name": "iterable"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "start": 2533,
              "end": 2572,
              "loc": {
                "start": {
                  "line": 79,
                  "column": 46
                },
                "end": {
                  "line": 81,
                  "column": 1
                }
              },
              "body": [
                {
                  "type": "ReturnStatement",
                  "start": 2536,
                  "end": 2570,
                  "loc": {
                    "start": {
                      "line": 80,
                      "column": 1
                    },
                    "end": {
                      "line": 80,
                      "column": 35
                    }
                  },
                  "argument": {
                    "type": "CallExpression",
                    "start": 2543,
                    "end": 2568,
                    "loc": {
                      "start": {
                        "line": 80,
                        "column": 8
                      },
                      "end": {
                        "line": 80,
                        "column": 33
                      }
                    },
                    "callee": {
                      "type": "Identifier",
                      "start": 2543,
                      "end": 2549,
                      "loc": {
                        "start": {
                          "line": 80,
                          "column": 8
                        },
                        "end": {
                          "line": 80,
                          "column": 14
                        },
                        "identifierName": "append"
                      },
                      "name": "append"
                    },
                    "arguments": [
                      {
                        "type": "ThisExpression",
                        "start": 2551,
                        "end": 2555,
                        "loc": {
                          "start": {
                            "line": 80,
                            "column": 16
                          },
                          "end": {
                            "line": 80,
                            "column": 20
                          }
                        }
                      },
                      {
                        "type": "Identifier",
                        "start": 2558,
                        "end": 2566,
                        "loc": {
                          "start": {
                            "line": 80,
                            "column": 23
                          },
                          "end": {
                            "line": 80,
                            "column": 31
                          },
                          "identifierName": "iterable"
                        },
                        "name": "iterable"
                      }
                    ]
                  }
                }
              ],
              "directives": []
            }
          },
          "leadingComments": null
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Returns a tree that contains all values of this tree in-order followed by\n * all values of the input iterable in-order.\n *\n * @example\n * // returns 'abc123'\n * import { from } from '@aureooms/js-fingertree' ;\n * import { Measures : { SIZE } } from '@aureooms/js-measure' ;\n * let tree = from( SIZE , 'abc' ).append('123') ;\n * [ ...tree ].join('') ;\n *\n * @param {Iterable} iterable The input iterable.\n *\n * @returns {Tree} The output tree.\n ",
            "start": 2033,
            "end": 2486,
            "loc": {
              "start": {
                "line": 64,
                "column": 0
              },
              "end": {
                "line": 78,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Returns a tree that contains all values of the input iterable in-order\n * followed by all values of this tree in-order.\n *\n * @example\n * // returns '123abc'\n * import { from } from '@aureooms/js-fingertree' ;\n * import { Measures : { SIZE } } from '@aureooms/js-measure' ;\n * let tree = from( SIZE , 'abc' ).prepend('123') ;\n * [ ...tree ].join('') ;\n *\n * @param {Iterable} iterable The input iterable.\n *\n * @returns {Tree} The output tree.\n ",
            "start": 2576,
            "end": 3030,
            "loc": {
              "start": {
                "line": 83,
                "column": 0
              },
              "end": {
                "line": 97,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExpressionStatement",
        "start": 3031,
        "end": 3120,
        "loc": {
          "start": {
            "line": 98,
            "column": 0
          },
          "end": {
            "line": 100,
            "column": 3
          }
        },
        "expression": {
          "type": "AssignmentExpression",
          "start": 3031,
          "end": 3118,
          "loc": {
            "start": {
              "line": 98,
              "column": 0
            },
            "end": {
              "line": 100,
              "column": 1
            }
          },
          "operator": "=",
          "left": {
            "type": "MemberExpression",
            "start": 3031,
            "end": 3053,
            "loc": {
              "start": {
                "line": 98,
                "column": 0
              },
              "end": {
                "line": 98,
                "column": 22
              }
            },
            "object": {
              "type": "MemberExpression",
              "start": 3031,
              "end": 3045,
              "loc": {
                "start": {
                  "line": 98,
                  "column": 0
                },
                "end": {
                  "line": 98,
                  "column": 14
                }
              },
              "object": {
                "type": "Identifier",
                "start": 3031,
                "end": 3035,
                "loc": {
                  "start": {
                    "line": 98,
                    "column": 0
                  },
                  "end": {
                    "line": 98,
                    "column": 4
                  },
                  "identifierName": "Tree"
                },
                "name": "Tree",
                "leadingComments": null
              },
              "property": {
                "type": "Identifier",
                "start": 3036,
                "end": 3045,
                "loc": {
                  "start": {
                    "line": 98,
                    "column": 5
                  },
                  "end": {
                    "line": 98,
                    "column": 14
                  },
                  "identifierName": "prototype"
                },
                "name": "prototype"
              },
              "computed": false,
              "leadingComments": null
            },
            "property": {
              "type": "Identifier",
              "start": 3046,
              "end": 3053,
              "loc": {
                "start": {
                  "line": 98,
                  "column": 15
                },
                "end": {
                  "line": 98,
                  "column": 22
                },
                "identifierName": "prepend"
              },
              "name": "prepend"
            },
            "computed": false,
            "leadingComments": null
          },
          "right": {
            "type": "FunctionExpression",
            "start": 3056,
            "end": 3118,
            "loc": {
              "start": {
                "line": 98,
                "column": 25
              },
              "end": {
                "line": 100,
                "column": 1
              }
            },
            "id": {
              "type": "Identifier",
              "start": 3046,
              "end": 3053,
              "loc": {
                "start": {
                  "line": 98,
                  "column": 15
                },
                "end": {
                  "line": 98,
                  "column": 22
                },
                "identifierName": "prepend"
              },
              "name": "prepend"
            },
            "generator": false,
            "expression": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "start": 3067,
                "end": 3075,
                "loc": {
                  "start": {
                    "line": 98,
                    "column": 36
                  },
                  "end": {
                    "line": 98,
                    "column": 44
                  },
                  "identifierName": "iterable"
                },
                "name": "iterable"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "start": 3078,
              "end": 3118,
              "loc": {
                "start": {
                  "line": 98,
                  "column": 47
                },
                "end": {
                  "line": 100,
                  "column": 1
                }
              },
              "body": [
                {
                  "type": "ReturnStatement",
                  "start": 3081,
                  "end": 3116,
                  "loc": {
                    "start": {
                      "line": 99,
                      "column": 1
                    },
                    "end": {
                      "line": 99,
                      "column": 36
                    }
                  },
                  "argument": {
                    "type": "CallExpression",
                    "start": 3088,
                    "end": 3114,
                    "loc": {
                      "start": {
                        "line": 99,
                        "column": 8
                      },
                      "end": {
                        "line": 99,
                        "column": 34
                      }
                    },
                    "callee": {
                      "type": "Identifier",
                      "start": 3088,
                      "end": 3095,
                      "loc": {
                        "start": {
                          "line": 99,
                          "column": 8
                        },
                        "end": {
                          "line": 99,
                          "column": 15
                        },
                        "identifierName": "prepend"
                      },
                      "name": "prepend"
                    },
                    "arguments": [
                      {
                        "type": "ThisExpression",
                        "start": 3097,
                        "end": 3101,
                        "loc": {
                          "start": {
                            "line": 99,
                            "column": 17
                          },
                          "end": {
                            "line": 99,
                            "column": 21
                          }
                        }
                      },
                      {
                        "type": "Identifier",
                        "start": 3104,
                        "end": 3112,
                        "loc": {
                          "start": {
                            "line": 99,
                            "column": 24
                          },
                          "end": {
                            "line": 99,
                            "column": 32
                          },
                          "identifierName": "iterable"
                        },
                        "name": "iterable"
                      }
                    ]
                  }
                }
              ],
              "directives": []
            }
          },
          "leadingComments": null
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Returns a tree that contains all values of the input iterable in-order\n * followed by all values of this tree in-order.\n *\n * @example\n * // returns '123abc'\n * import { from } from '@aureooms/js-fingertree' ;\n * import { Measures : { SIZE } } from '@aureooms/js-measure' ;\n * let tree = from( SIZE , 'abc' ).prepend('123') ;\n * [ ...tree ].join('') ;\n *\n * @param {Iterable} iterable The input iterable.\n *\n * @returns {Tree} The output tree.\n ",
            "start": 2576,
            "end": 3030,
            "loc": {
              "start": {
                "line": 83,
                "column": 0
              },
              "end": {
                "line": 97,
                "column": 3
              }
            }
          }
        ]
      }
    ],
    "directives": []
  },
  "comments": [
    {
      "type": "CommentBlock",
      "value": "*\n * Base class for all implementations.\n ",
      "start": 51,
      "end": 97,
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 5,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * For performance purposes, some of the operations are implemented lazily.\n * This method will force the (shallow) evaluation of this tree. This is an\n * implementation detail and need not be used by the user directly.\n *\n * @returns {Tree} The shallow evaluated tree.\n ",
      "start": 128,
      "end": 405,
      "loc": {
        "start": {
          "line": 8,
          "column": 0
        },
        "end": {
          "line": 14,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Returns a tree that contains a prefix of this tree's values left-to-right list.\n * The prefix is defined by containing all values for which the\n * input predicate evaluates to `false` on the measure\n * of the prefix ending with that value. The input predicate must be monotone\n * (`false` then `true`).\n *\n * @example\n * // returns 'ab'\n * import { from } from '@aureooms/js-fingertree' ;\n * import { Measures : { SIZE } } from '@aureooms/js-measure' ;\n * let tree = from( SIZE , 'abc' ) ;\n * tree = tree.takeUntil( measure => measure > 2 ) ;\n * [ ...tree ].join('') ;\n *\n * @param {Function} predicate The input measure predicate (monotone).\n *\n * @returns {Tree} The output tree.\n ",
      "start": 464,
      "end": 1156,
      "loc": {
        "start": {
          "line": 19,
          "column": 0
        },
        "end": {
          "line": 37,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Returns a tree that contains a suffix of this tree's values left-to-right\n * list. The suffix is defined by containing all values for which the input\n * predicate evaluates to `true` on the measure of the prefix ending with that\n * value. The input predicate must be monotone (`false` then `true`).\n *\n * @example\n * // returns 'c'\n * import { from } from '@aureooms/js-fingertree' ;\n * import { Measures : { SIZE } } from '@aureooms/js-measure' ;\n * let tree = from( SIZE , 'abc' ) ;\n * tree = tree.dropUntil( measure => measure > 2 ) ;\n * [ ...tree ].join('') ;\n *\n * @param {Function} predicate The input measure predicate (monotone).\n *\n * @returns {Tree} The output tree.\n ",
      "start": 1251,
      "end": 1938,
      "loc": {
        "start": {
          "line": 42,
          "column": 0
        },
        "end": {
          "line": 59,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Returns a tree that contains all values of this tree in-order followed by\n * all values of the input iterable in-order.\n *\n * @example\n * // returns 'abc123'\n * import { from } from '@aureooms/js-fingertree' ;\n * import { Measures : { SIZE } } from '@aureooms/js-measure' ;\n * let tree = from( SIZE , 'abc' ).append('123') ;\n * [ ...tree ].join('') ;\n *\n * @param {Iterable} iterable The input iterable.\n *\n * @returns {Tree} The output tree.\n ",
      "start": 2033,
      "end": 2486,
      "loc": {
        "start": {
          "line": 64,
          "column": 0
        },
        "end": {
          "line": 78,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Returns a tree that contains all values of the input iterable in-order\n * followed by all values of this tree in-order.\n *\n * @example\n * // returns '123abc'\n * import { from } from '@aureooms/js-fingertree' ;\n * import { Measures : { SIZE } } from '@aureooms/js-measure' ;\n * let tree = from( SIZE , 'abc' ).prepend('123') ;\n * [ ...tree ].join('') ;\n *\n * @param {Iterable} iterable The input iterable.\n *\n * @returns {Tree} The output tree.\n ",
      "start": 2576,
      "end": 3030,
      "loc": {
        "start": {
          "line": 83,
          "column": 0
        },
        "end": {
          "line": 97,
          "column": 3
        }
      }
    }
  ],
  "tokens": [
    {
      "type": {
        "label": "import",
        "keyword": "import",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "import",
      "start": 0,
      "end": 6,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 7,
      "end": 8,
      "loc": {
        "start": {
          "line": 1,
          "column": 7
        },
        "end": {
          "line": 1,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "append",
      "start": 9,
      "end": 15,
      "loc": {
        "start": {
          "line": 1,
          "column": 9
        },
        "end": {
          "line": 1,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 16,
      "end": 17,
      "loc": {
        "start": {
          "line": 1,
          "column": 16
        },
        "end": {
          "line": 1,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "prepend",
      "start": 18,
      "end": 25,
      "loc": {
        "start": {
          "line": 1,
          "column": 18
        },
        "end": {
          "line": 1,
          "column": 25
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 26,
      "end": 27,
      "loc": {
        "start": {
          "line": 1,
          "column": 26
        },
        "end": {
          "line": 1,
          "column": 27
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "from",
      "start": 28,
      "end": 32,
      "loc": {
        "start": {
          "line": 1,
          "column": 28
        },
        "end": {
          "line": 1,
          "column": 32
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "../../0-core",
      "start": 33,
      "end": 47,
      "loc": {
        "start": {
          "line": 1,
          "column": 33
        },
        "end": {
          "line": 1,
          "column": 47
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 48,
      "end": 49,
      "loc": {
        "start": {
          "line": 1,
          "column": 48
        },
        "end": {
          "line": 1,
          "column": 49
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Base class for all implementations.\n ",
      "start": 51,
      "end": 97,
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 5,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 98,
      "end": 104,
      "loc": {
        "start": {
          "line": 6,
          "column": 0
        },
        "end": {
          "line": 6,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "function",
        "keyword": "function",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "function",
      "start": 105,
      "end": 113,
      "loc": {
        "start": {
          "line": 6,
          "column": 7
        },
        "end": {
          "line": 6,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Tree",
      "start": 114,
      "end": 118,
      "loc": {
        "start": {
          "line": 6,
          "column": 16
        },
        "end": {
          "line": 6,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 119,
      "end": 120,
      "loc": {
        "start": {
          "line": 6,
          "column": 21
        },
        "end": {
          "line": 6,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 121,
      "end": 122,
      "loc": {
        "start": {
          "line": 6,
          "column": 23
        },
        "end": {
          "line": 6,
          "column": 24
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 123,
      "end": 124,
      "loc": {
        "start": {
          "line": 6,
          "column": 25
        },
        "end": {
          "line": 6,
          "column": 26
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 125,
      "end": 126,
      "loc": {
        "start": {
          "line": 6,
          "column": 27
        },
        "end": {
          "line": 6,
          "column": 28
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * For performance purposes, some of the operations are implemented lazily.\n * This method will force the (shallow) evaluation of this tree. This is an\n * implementation detail and need not be used by the user directly.\n *\n * @returns {Tree} The shallow evaluated tree.\n ",
      "start": 128,
      "end": 405,
      "loc": {
        "start": {
          "line": 8,
          "column": 0
        },
        "end": {
          "line": 14,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Tree",
      "start": 406,
      "end": 410,
      "loc": {
        "start": {
          "line": 15,
          "column": 0
        },
        "end": {
          "line": 15,
          "column": 4
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 410,
      "end": 411,
      "loc": {
        "start": {
          "line": 15,
          "column": 4
        },
        "end": {
          "line": 15,
          "column": 5
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "prototype",
      "start": 411,
      "end": 420,
      "loc": {
        "start": {
          "line": 15,
          "column": 5
        },
        "end": {
          "line": 15,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 420,
      "end": 421,
      "loc": {
        "start": {
          "line": 15,
          "column": 14
        },
        "end": {
          "line": 15,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "force",
      "start": 421,
      "end": 426,
      "loc": {
        "start": {
          "line": 15,
          "column": 15
        },
        "end": {
          "line": 15,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 427,
      "end": 428,
      "loc": {
        "start": {
          "line": 15,
          "column": 21
        },
        "end": {
          "line": 15,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": "function",
        "keyword": "function",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "function",
      "start": 429,
      "end": 437,
      "loc": {
        "start": {
          "line": 15,
          "column": 23
        },
        "end": {
          "line": 15,
          "column": 31
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 438,
      "end": 439,
      "loc": {
        "start": {
          "line": 15,
          "column": 32
        },
        "end": {
          "line": 15,
          "column": 33
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 440,
      "end": 441,
      "loc": {
        "start": {
          "line": 15,
          "column": 34
        },
        "end": {
          "line": 15,
          "column": 35
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 442,
      "end": 443,
      "loc": {
        "start": {
          "line": 15,
          "column": 36
        },
        "end": {
          "line": 15,
          "column": 37
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 445,
      "end": 451,
      "loc": {
        "start": {
          "line": 16,
          "column": 1
        },
        "end": {
          "line": 16,
          "column": 7
        }
      }
    },
    {
      "type": {
        "label": "this",
        "keyword": "this",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "this",
      "start": 452,
      "end": 456,
      "loc": {
        "start": {
          "line": 16,
          "column": 8
        },
        "end": {
          "line": 16,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 457,
      "end": 458,
      "loc": {
        "start": {
          "line": 16,
          "column": 13
        },
        "end": {
          "line": 16,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 459,
      "end": 460,
      "loc": {
        "start": {
          "line": 17,
          "column": 0
        },
        "end": {
          "line": 17,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 461,
      "end": 462,
      "loc": {
        "start": {
          "line": 17,
          "column": 2
        },
        "end": {
          "line": 17,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Returns a tree that contains a prefix of this tree's values left-to-right list.\n * The prefix is defined by containing all values for which the\n * input predicate evaluates to `false` on the measure\n * of the prefix ending with that value. The input predicate must be monotone\n * (`false` then `true`).\n *\n * @example\n * // returns 'ab'\n * import { from } from '@aureooms/js-fingertree' ;\n * import { Measures : { SIZE } } from '@aureooms/js-measure' ;\n * let tree = from( SIZE , 'abc' ) ;\n * tree = tree.takeUntil( measure => measure > 2 ) ;\n * [ ...tree ].join('') ;\n *\n * @param {Function} predicate The input measure predicate (monotone).\n *\n * @returns {Tree} The output tree.\n ",
      "start": 464,
      "end": 1156,
      "loc": {
        "start": {
          "line": 19,
          "column": 0
        },
        "end": {
          "line": 37,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Tree",
      "start": 1157,
      "end": 1161,
      "loc": {
        "start": {
          "line": 38,
          "column": 0
        },
        "end": {
          "line": 38,
          "column": 4
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1161,
      "end": 1162,
      "loc": {
        "start": {
          "line": 38,
          "column": 4
        },
        "end": {
          "line": 38,
          "column": 5
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "prototype",
      "start": 1162,
      "end": 1171,
      "loc": {
        "start": {
          "line": 38,
          "column": 5
        },
        "end": {
          "line": 38,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1171,
      "end": 1172,
      "loc": {
        "start": {
          "line": 38,
          "column": 14
        },
        "end": {
          "line": 38,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "takeUntil",
      "start": 1172,
      "end": 1181,
      "loc": {
        "start": {
          "line": 38,
          "column": 15
        },
        "end": {
          "line": 38,
          "column": 24
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 1182,
      "end": 1183,
      "loc": {
        "start": {
          "line": 38,
          "column": 25
        },
        "end": {
          "line": 38,
          "column": 26
        }
      }
    },
    {
      "type": {
        "label": "function",
        "keyword": "function",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "function",
      "start": 1184,
      "end": 1192,
      "loc": {
        "start": {
          "line": 38,
          "column": 27
        },
        "end": {
          "line": 38,
          "column": 35
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1193,
      "end": 1194,
      "loc": {
        "start": {
          "line": 38,
          "column": 36
        },
        "end": {
          "line": 38,
          "column": 37
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "predicate",
      "start": 1195,
      "end": 1204,
      "loc": {
        "start": {
          "line": 38,
          "column": 38
        },
        "end": {
          "line": 38,
          "column": 47
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1205,
      "end": 1206,
      "loc": {
        "start": {
          "line": 38,
          "column": 48
        },
        "end": {
          "line": 38,
          "column": 49
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1207,
      "end": 1208,
      "loc": {
        "start": {
          "line": 38,
          "column": 50
        },
        "end": {
          "line": 38,
          "column": 51
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 1210,
      "end": 1216,
      "loc": {
        "start": {
          "line": 39,
          "column": 1
        },
        "end": {
          "line": 39,
          "column": 7
        }
      }
    },
    {
      "type": {
        "label": "this",
        "keyword": "this",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "this",
      "start": 1217,
      "end": 1221,
      "loc": {
        "start": {
          "line": 39,
          "column": 8
        },
        "end": {
          "line": 39,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1221,
      "end": 1222,
      "loc": {
        "start": {
          "line": 39,
          "column": 12
        },
        "end": {
          "line": 39,
          "column": 13
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "split",
      "start": 1222,
      "end": 1227,
      "loc": {
        "start": {
          "line": 39,
          "column": 13
        },
        "end": {
          "line": 39,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1227,
      "end": 1228,
      "loc": {
        "start": {
          "line": 39,
          "column": 18
        },
        "end": {
          "line": 39,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "predicate",
      "start": 1229,
      "end": 1238,
      "loc": {
        "start": {
          "line": 39,
          "column": 20
        },
        "end": {
          "line": 39,
          "column": 29
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1239,
      "end": 1240,
      "loc": {
        "start": {
          "line": 39,
          "column": 30
        },
        "end": {
          "line": 39,
          "column": 31
        }
      }
    },
    {
      "type": {
        "label": "[",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1240,
      "end": 1241,
      "loc": {
        "start": {
          "line": 39,
          "column": 31
        },
        "end": {
          "line": 39,
          "column": 32
        }
      }
    },
    {
      "type": {
        "label": "num",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": 0,
      "start": 1241,
      "end": 1242,
      "loc": {
        "start": {
          "line": 39,
          "column": 32
        },
        "end": {
          "line": 39,
          "column": 33
        }
      }
    },
    {
      "type": {
        "label": "]",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1242,
      "end": 1243,
      "loc": {
        "start": {
          "line": 39,
          "column": 33
        },
        "end": {
          "line": 39,
          "column": 34
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1244,
      "end": 1245,
      "loc": {
        "start": {
          "line": 39,
          "column": 35
        },
        "end": {
          "line": 39,
          "column": 36
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1246,
      "end": 1247,
      "loc": {
        "start": {
          "line": 40,
          "column": 0
        },
        "end": {
          "line": 40,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1248,
      "end": 1249,
      "loc": {
        "start": {
          "line": 40,
          "column": 2
        },
        "end": {
          "line": 40,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Returns a tree that contains a suffix of this tree's values left-to-right\n * list. The suffix is defined by containing all values for which the input\n * predicate evaluates to `true` on the measure of the prefix ending with that\n * value. The input predicate must be monotone (`false` then `true`).\n *\n * @example\n * // returns 'c'\n * import { from } from '@aureooms/js-fingertree' ;\n * import { Measures : { SIZE } } from '@aureooms/js-measure' ;\n * let tree = from( SIZE , 'abc' ) ;\n * tree = tree.dropUntil( measure => measure > 2 ) ;\n * [ ...tree ].join('') ;\n *\n * @param {Function} predicate The input measure predicate (monotone).\n *\n * @returns {Tree} The output tree.\n ",
      "start": 1251,
      "end": 1938,
      "loc": {
        "start": {
          "line": 42,
          "column": 0
        },
        "end": {
          "line": 59,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Tree",
      "start": 1939,
      "end": 1943,
      "loc": {
        "start": {
          "line": 60,
          "column": 0
        },
        "end": {
          "line": 60,
          "column": 4
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1943,
      "end": 1944,
      "loc": {
        "start": {
          "line": 60,
          "column": 4
        },
        "end": {
          "line": 60,
          "column": 5
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "prototype",
      "start": 1944,
      "end": 1953,
      "loc": {
        "start": {
          "line": 60,
          "column": 5
        },
        "end": {
          "line": 60,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1953,
      "end": 1954,
      "loc": {
        "start": {
          "line": 60,
          "column": 14
        },
        "end": {
          "line": 60,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "dropUntil",
      "start": 1954,
      "end": 1963,
      "loc": {
        "start": {
          "line": 60,
          "column": 15
        },
        "end": {
          "line": 60,
          "column": 24
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 1964,
      "end": 1965,
      "loc": {
        "start": {
          "line": 60,
          "column": 25
        },
        "end": {
          "line": 60,
          "column": 26
        }
      }
    },
    {
      "type": {
        "label": "function",
        "keyword": "function",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "function",
      "start": 1966,
      "end": 1974,
      "loc": {
        "start": {
          "line": 60,
          "column": 27
        },
        "end": {
          "line": 60,
          "column": 35
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1975,
      "end": 1976,
      "loc": {
        "start": {
          "line": 60,
          "column": 36
        },
        "end": {
          "line": 60,
          "column": 37
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "predicate",
      "start": 1977,
      "end": 1986,
      "loc": {
        "start": {
          "line": 60,
          "column": 38
        },
        "end": {
          "line": 60,
          "column": 47
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1987,
      "end": 1988,
      "loc": {
        "start": {
          "line": 60,
          "column": 48
        },
        "end": {
          "line": 60,
          "column": 49
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1989,
      "end": 1990,
      "loc": {
        "start": {
          "line": 60,
          "column": 50
        },
        "end": {
          "line": 60,
          "column": 51
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 1992,
      "end": 1998,
      "loc": {
        "start": {
          "line": 61,
          "column": 1
        },
        "end": {
          "line": 61,
          "column": 7
        }
      }
    },
    {
      "type": {
        "label": "this",
        "keyword": "this",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "this",
      "start": 1999,
      "end": 2003,
      "loc": {
        "start": {
          "line": 61,
          "column": 8
        },
        "end": {
          "line": 61,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2003,
      "end": 2004,
      "loc": {
        "start": {
          "line": 61,
          "column": 12
        },
        "end": {
          "line": 61,
          "column": 13
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "split",
      "start": 2004,
      "end": 2009,
      "loc": {
        "start": {
          "line": 61,
          "column": 13
        },
        "end": {
          "line": 61,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2009,
      "end": 2010,
      "loc": {
        "start": {
          "line": 61,
          "column": 18
        },
        "end": {
          "line": 61,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "predicate",
      "start": 2011,
      "end": 2020,
      "loc": {
        "start": {
          "line": 61,
          "column": 20
        },
        "end": {
          "line": 61,
          "column": 29
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2021,
      "end": 2022,
      "loc": {
        "start": {
          "line": 61,
          "column": 30
        },
        "end": {
          "line": 61,
          "column": 31
        }
      }
    },
    {
      "type": {
        "label": "[",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2022,
      "end": 2023,
      "loc": {
        "start": {
          "line": 61,
          "column": 31
        },
        "end": {
          "line": 61,
          "column": 32
        }
      }
    },
    {
      "type": {
        "label": "num",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": 1,
      "start": 2023,
      "end": 2024,
      "loc": {
        "start": {
          "line": 61,
          "column": 32
        },
        "end": {
          "line": 61,
          "column": 33
        }
      }
    },
    {
      "type": {
        "label": "]",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2024,
      "end": 2025,
      "loc": {
        "start": {
          "line": 61,
          "column": 33
        },
        "end": {
          "line": 61,
          "column": 34
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2026,
      "end": 2027,
      "loc": {
        "start": {
          "line": 61,
          "column": 35
        },
        "end": {
          "line": 61,
          "column": 36
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2028,
      "end": 2029,
      "loc": {
        "start": {
          "line": 62,
          "column": 0
        },
        "end": {
          "line": 62,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2030,
      "end": 2031,
      "loc": {
        "start": {
          "line": 62,
          "column": 2
        },
        "end": {
          "line": 62,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Returns a tree that contains all values of this tree in-order followed by\n * all values of the input iterable in-order.\n *\n * @example\n * // returns 'abc123'\n * import { from } from '@aureooms/js-fingertree' ;\n * import { Measures : { SIZE } } from '@aureooms/js-measure' ;\n * let tree = from( SIZE , 'abc' ).append('123') ;\n * [ ...tree ].join('') ;\n *\n * @param {Iterable} iterable The input iterable.\n *\n * @returns {Tree} The output tree.\n ",
      "start": 2033,
      "end": 2486,
      "loc": {
        "start": {
          "line": 64,
          "column": 0
        },
        "end": {
          "line": 78,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Tree",
      "start": 2487,
      "end": 2491,
      "loc": {
        "start": {
          "line": 79,
          "column": 0
        },
        "end": {
          "line": 79,
          "column": 4
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2491,
      "end": 2492,
      "loc": {
        "start": {
          "line": 79,
          "column": 4
        },
        "end": {
          "line": 79,
          "column": 5
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "prototype",
      "start": 2492,
      "end": 2501,
      "loc": {
        "start": {
          "line": 79,
          "column": 5
        },
        "end": {
          "line": 79,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2501,
      "end": 2502,
      "loc": {
        "start": {
          "line": 79,
          "column": 14
        },
        "end": {
          "line": 79,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "append",
      "start": 2502,
      "end": 2508,
      "loc": {
        "start": {
          "line": 79,
          "column": 15
        },
        "end": {
          "line": 79,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 2509,
      "end": 2510,
      "loc": {
        "start": {
          "line": 79,
          "column": 22
        },
        "end": {
          "line": 79,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": "function",
        "keyword": "function",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "function",
      "start": 2511,
      "end": 2519,
      "loc": {
        "start": {
          "line": 79,
          "column": 24
        },
        "end": {
          "line": 79,
          "column": 32
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2520,
      "end": 2521,
      "loc": {
        "start": {
          "line": 79,
          "column": 33
        },
        "end": {
          "line": 79,
          "column": 34
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "iterable",
      "start": 2522,
      "end": 2530,
      "loc": {
        "start": {
          "line": 79,
          "column": 35
        },
        "end": {
          "line": 79,
          "column": 43
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2531,
      "end": 2532,
      "loc": {
        "start": {
          "line": 79,
          "column": 44
        },
        "end": {
          "line": 79,
          "column": 45
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2533,
      "end": 2534,
      "loc": {
        "start": {
          "line": 79,
          "column": 46
        },
        "end": {
          "line": 79,
          "column": 47
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 2536,
      "end": 2542,
      "loc": {
        "start": {
          "line": 80,
          "column": 1
        },
        "end": {
          "line": 80,
          "column": 7
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "append",
      "start": 2543,
      "end": 2549,
      "loc": {
        "start": {
          "line": 80,
          "column": 8
        },
        "end": {
          "line": 80,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2549,
      "end": 2550,
      "loc": {
        "start": {
          "line": 80,
          "column": 14
        },
        "end": {
          "line": 80,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "this",
        "keyword": "this",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "this",
      "start": 2551,
      "end": 2555,
      "loc": {
        "start": {
          "line": 80,
          "column": 16
        },
        "end": {
          "line": 80,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2556,
      "end": 2557,
      "loc": {
        "start": {
          "line": 80,
          "column": 21
        },
        "end": {
          "line": 80,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "iterable",
      "start": 2558,
      "end": 2566,
      "loc": {
        "start": {
          "line": 80,
          "column": 23
        },
        "end": {
          "line": 80,
          "column": 31
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2567,
      "end": 2568,
      "loc": {
        "start": {
          "line": 80,
          "column": 32
        },
        "end": {
          "line": 80,
          "column": 33
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2569,
      "end": 2570,
      "loc": {
        "start": {
          "line": 80,
          "column": 34
        },
        "end": {
          "line": 80,
          "column": 35
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2571,
      "end": 2572,
      "loc": {
        "start": {
          "line": 81,
          "column": 0
        },
        "end": {
          "line": 81,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2573,
      "end": 2574,
      "loc": {
        "start": {
          "line": 81,
          "column": 2
        },
        "end": {
          "line": 81,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Returns a tree that contains all values of the input iterable in-order\n * followed by all values of this tree in-order.\n *\n * @example\n * // returns '123abc'\n * import { from } from '@aureooms/js-fingertree' ;\n * import { Measures : { SIZE } } from '@aureooms/js-measure' ;\n * let tree = from( SIZE , 'abc' ).prepend('123') ;\n * [ ...tree ].join('') ;\n *\n * @param {Iterable} iterable The input iterable.\n *\n * @returns {Tree} The output tree.\n ",
      "start": 2576,
      "end": 3030,
      "loc": {
        "start": {
          "line": 83,
          "column": 0
        },
        "end": {
          "line": 97,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Tree",
      "start": 3031,
      "end": 3035,
      "loc": {
        "start": {
          "line": 98,
          "column": 0
        },
        "end": {
          "line": 98,
          "column": 4
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3035,
      "end": 3036,
      "loc": {
        "start": {
          "line": 98,
          "column": 4
        },
        "end": {
          "line": 98,
          "column": 5
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "prototype",
      "start": 3036,
      "end": 3045,
      "loc": {
        "start": {
          "line": 98,
          "column": 5
        },
        "end": {
          "line": 98,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3045,
      "end": 3046,
      "loc": {
        "start": {
          "line": 98,
          "column": 14
        },
        "end": {
          "line": 98,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "prepend",
      "start": 3046,
      "end": 3053,
      "loc": {
        "start": {
          "line": 98,
          "column": 15
        },
        "end": {
          "line": 98,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 3054,
      "end": 3055,
      "loc": {
        "start": {
          "line": 98,
          "column": 23
        },
        "end": {
          "line": 98,
          "column": 24
        }
      }
    },
    {
      "type": {
        "label": "function",
        "keyword": "function",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "function",
      "start": 3056,
      "end": 3064,
      "loc": {
        "start": {
          "line": 98,
          "column": 25
        },
        "end": {
          "line": 98,
          "column": 33
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3065,
      "end": 3066,
      "loc": {
        "start": {
          "line": 98,
          "column": 34
        },
        "end": {
          "line": 98,
          "column": 35
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "iterable",
      "start": 3067,
      "end": 3075,
      "loc": {
        "start": {
          "line": 98,
          "column": 36
        },
        "end": {
          "line": 98,
          "column": 44
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3076,
      "end": 3077,
      "loc": {
        "start": {
          "line": 98,
          "column": 45
        },
        "end": {
          "line": 98,
          "column": 46
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3078,
      "end": 3079,
      "loc": {
        "start": {
          "line": 98,
          "column": 47
        },
        "end": {
          "line": 98,
          "column": 48
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 3081,
      "end": 3087,
      "loc": {
        "start": {
          "line": 99,
          "column": 1
        },
        "end": {
          "line": 99,
          "column": 7
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "prepend",
      "start": 3088,
      "end": 3095,
      "loc": {
        "start": {
          "line": 99,
          "column": 8
        },
        "end": {
          "line": 99,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3095,
      "end": 3096,
      "loc": {
        "start": {
          "line": 99,
          "column": 15
        },
        "end": {
          "line": 99,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": "this",
        "keyword": "this",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "this",
      "start": 3097,
      "end": 3101,
      "loc": {
        "start": {
          "line": 99,
          "column": 17
        },
        "end": {
          "line": 99,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3102,
      "end": 3103,
      "loc": {
        "start": {
          "line": 99,
          "column": 22
        },
        "end": {
          "line": 99,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "iterable",
      "start": 3104,
      "end": 3112,
      "loc": {
        "start": {
          "line": 99,
          "column": 24
        },
        "end": {
          "line": 99,
          "column": 32
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3113,
      "end": 3114,
      "loc": {
        "start": {
          "line": 99,
          "column": 33
        },
        "end": {
          "line": 99,
          "column": 34
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3115,
      "end": 3116,
      "loc": {
        "start": {
          "line": 99,
          "column": 35
        },
        "end": {
          "line": 99,
          "column": 36
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3117,
      "end": 3118,
      "loc": {
        "start": {
          "line": 100,
          "column": 0
        },
        "end": {
          "line": 100,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3119,
      "end": 3120,
      "loc": {
        "start": {
          "line": 100,
          "column": 2
        },
        "end": {
          "line": 100,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "eof",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3121,
      "end": 3121,
      "loc": {
        "start": {
          "line": 101,
          "column": 0
        },
        "end": {
          "line": 101,
          "column": 0
        }
      }
    }
  ]
}